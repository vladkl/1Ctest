
#Область ОбработчикиКомандФормы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект.КомандыАгенту.Параметры.УстановитьЗначениеПараметра("АгентЦКК", Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Функция ДобавитьОтступы(Знач Строка)
    
    #Если ТонкийКлиент Тогда
        
    ЧтениеJSON = Новый ЧтениеJSON();
    ЧтениеJSON.УстановитьСтроку(Строка);
    Попытка
        КомандаСоответствие = ПрочитатьJSON(ЧтениеJSON, Истина);
    Исключение
        КомандаСоответствие = Новый Соответствие;
    КонецПопытки;
    
    ЗаписьJSON = Новый ЗаписьJSON();
    ЗаписьJSON.УстановитьСтроку(Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Авто));
    ЗаписатьJSON(ЗаписьJSON, КомандаСоответствие);
    Строка = ЗаписьJSON.Закрыть();
    
    СтрокаМассив = СтрРазделить(Строка, Символы.ПС, Истина);
    СтрокаМассивНовый = Новый Массив;
    Отступы = "";
    
    Для Каждого ТекСтрока Из СтрокаМассив Цикл
        
        Если (СтрНайти(ТекСтрока, "}") + СтрНайти(ТекСтрока, "]")) > 0 Тогда
            Отступы = Лев(Отступы, СтрДлина(Отступы) - 4);
        КонецЕсли;
        
        СтрокаМассивНовый.Добавить(Отступы + ТекСтрока);
        
        Если (СтрНайти(ТекСтрока, "{") + СтрНайти(ТекСтрока, "[")) > 0 Тогда
            Отступы = Отступы + "    ";
        КонецЕсли;
        
    КонецЦикла;
    
    Возврат СтрСоединить(СтрокаМассивНовый, Символы.ПС);
    
    #КонецЕсли

КонецФункции

&НаСервереБезКонтекста
Функция ДобавитьОтступыНаСервере(Знач Строка)
    
    ЧтениеJSON = Новый ЧтениеJSON();
    ЧтениеJSON.УстановитьСтроку(Строка);
    Попытка
        КомандаСоответствие = ПрочитатьJSON(ЧтениеJSON, Истина);
    Исключение
        КомандаСоответствие = Новый Соответствие;
    КонецПопытки;
    
    ЗаписьJSON = Новый ЗаписьJSON();
    ЗаписьJSON.УстановитьСтроку(Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Авто));
    ЗаписатьJSON(ЗаписьJSON, КомандаСоответствие);
    Строка = ЗаписьJSON.Закрыть();
    
    СтрокаМассив = СтрРазделить(Строка, Символы.ПС, Истина);
    СтрокаМассивНовый = Новый Массив;
    Отступы = "";
    
    Для Каждого ТекСтрока Из СтрокаМассив Цикл
        
        Если (СтрНайти(ТекСтрока, "}") + СтрНайти(ТекСтрока, "]")) > 0 Тогда
            Отступы = Лев(Отступы, СтрДлина(Отступы) - 4);
        КонецЕсли;
        
        СтрокаМассивНовый.Добавить(Отступы + ТекСтрока);
        
        Если (СтрНайти(ТекСтрока, "{") + СтрНайти(ТекСтрока, "[")) > 0 Тогда
            Отступы = Отступы + "    ";
        КонецЕсли;
        
    КонецЦикла;
    
    Возврат СтрСоединить(СтрокаМассивНовый, Символы.ПС);
    
КонецФункции

&НаКлиенте
Процедура КомандыАгентуПриАктивизацииСтроки(Элемент)
    ПодключитьОбработчикОжидания("КомандыАгентуПриАктивизацииСтрокиОбработчикОжидания", 0.1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура КомандыАгентуПриАктивизацииСтрокиОбработчикОжидания() Экспорт
	
	ТекущиеДанные = ЭтотОбъект.Элементы.КомандыАгенту.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
	    #Если ТонкийКлиент Тогда
	        ЭтотОбъект.ТекущаяКоманда = ДобавитьОтступы(ТекущиеДанные.Команда);
	    #ИначеЕсли ВебКлиент Тогда
	        ЭтотОбъект.ТекущаяКоманда = ДобавитьОтступыНаСервере(ТекущиеДанные.Команда);
		#КонецЕсли
	КонецЕсли;
    
КонецПроцедуры

#КонецОбласти
