
///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Параметры.ДокументВыполнения) Тогда
		Сообщить("Не указан документ выполнения!");
		Отказ = Истина;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат
	КонецЕсли;
	
	ДокументВыполнения = Параметры.ДокументВыполнения;
	
	ЗаполнитьДанныеФормы();
	ЗаполнитьТаблицуБлокировок();
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыЗапросаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура("ПараметрыЗапроса", ПараметрыЗапроса);
	ОткрытьФорму("ОбщаяФорма.ПросмотрТекста", 
		ПараметрыФормы, ЭтотОбъект,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура заполняет таблицу блокировок.
//
Процедура ЗаполнитьТаблицуБлокировок()
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА Блокировка.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияБлокировок.Ожидание)
	               |			ТОГДА 2
	               |		ИНАЧЕ 1
	               |	КОНЕЦ КАК ИндексКартинки,
	               |	Блокировка.Ссылка КАК Ссылка,
	               |	Блокировка.Дата КАК Дата,
	               |	Блокировка.Гранулярность КАК Гранулярность,
	               |	Блокировка.ИдентификаторРесурса КАК ИдентификаторРесурса,
	               |	Блокировка.МоментВремени КАК МоментВремени,
	               |	Блокировка.Режим КАК Режим,
	               |	Блокировка.Ресурс КАК Ресурс,
	               |	Блокировка.Состояние КАК Состояние,
	               |	ВЫБОР
	               |		КОГДА Блокировка.Ресурс.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыРесурсов.ОбъектМетаданных)
	               |			ТОГДА Блокировка.Ресурс
	               |		КОГДА Блокировка.Ресурс.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыРесурсов.Таблица)
	               |			ТОГДА Блокировка.Ресурс.Родитель
	               |		КОГДА Блокировка.Ресурс.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыРесурсов.Индекс)
	               |			ТОГДА Блокировка.Ресурс.Родитель.Родитель
	               |	КОНЕЦ КАК ОбъектМетаданных,
	               |	0 КАК ИндексКартинкиОбъектМетаданных
	               |ИЗ
	               |	Документ.Блокировка КАК Блокировка
	               |ГДЕ
	               |	Блокировка.ВыполнениеЗапроса = &ДокументВыполнения";
	
	Запрос.УстановитьПараметр("ДокументВыполнения", ДокументВыполнения);
	
	ТаблицаБлокировок = Запрос.Выполнить().Выгрузить();
	
	Для Каждого ТекСтр Из ТаблицаБлокировок Цикл
		ТекСтр.ИндексКартинкиОбъектМетаданных = СтруктураМетаданных.ПолучитьИндексКартинки(ТекСтр.ОбъектМетаданных);
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ТаблицаБлокировок, "Блокировки");
	
КонецПроцедуры // ЗаполнитьТаблицуБлокировок()

// Процедура заполняет данные формы.
//
Процедура ЗаполнитьДанныеФормы()
	
	Запрос = Новый Запрос;
	
	Если ТипЗнч(ДокументВыполнения) = Тип("ДокументСсылка.ВыполнениеКода") Тогда
		
		// Запрос выбора данных документа Выполнение
		Запрос.Текст = "ВЫБРАТЬ
		               |	Выполнение.Ссылка КАК Ссылка,
		               |	Выполнение.Дата КАК Дата,
		               |	Выполнение.ВремяВыполненияМс КАК ВремяВыполненияМс,
		               |	Выполнение.МоментВремениОкончания КАК МоментВремениОкончания,
		               |	Выполнение.ПользовательИБ КАК ПользовательИБ,
		               |	Выполнение.Контекст КАК Контекст
		               |ИЗ
		               |	Документ.ВыполнениеКода КАК Выполнение
		               |ГДЕ
		               |	Выполнение.Ссылка = &ДокументВыполнения";
		
	Иначе
		
		// Запрос выбора данных документа ВыполнениеЗапроса
		Запрос.Текст = "ВЫБРАТЬ
		               |	Выполнение.Ссылка КАК Ссылка,
		               |	Выполнение.Дата КАК Дата,
		               |	Выполнение.ВремяВыполненияМс КАК ВремяВыполненияМс,
		               |	Выполнение.МоментВремениОкончания КАК МоментВремениОкончания,
		               |	Выполнение.ПользовательИБ КАК ПользовательИБ,
		               |	Выполнение.Контекст КАК Контекст,
		               |	Выполнение.ТекстЗапроса.Текст КАК Текст,
		               |	Выполнение.ТекстЗапроса.МетаТекст КАК МетаТекст,
		               |	Выполнение.План.Текст КАК План,
		               |	Выполнение.План.ТипСУБД КАК ТипСУБД,
		               |	Выполнение.ПараметрыЗапроса КАК ПараметрыЗапроса
		               |ИЗ
		               |	Документ.ВыполнениеЗапроса КАК Выполнение
		               |ГДЕ
		               |	Выполнение.Ссылка = &ДокументВыполнения";
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДокументВыполнения", ДокументВыполнения);
	Выборка = Запрос.Выполнить().Выбрать();
	
	// Заполнить данные формы
	Пока Выборка.Следующий() Цикл
		
		ВремяВыполненияМс      = Выборка.ВремяВыполненияМс;
		Время                  = Выборка.Дата;
		МоментВремениОкончания = Выборка.МоментВремениОкончания;
		ПользовательИБ         = Выборка.ПользовательИБ;
		КонтекстВыполнения.УстановитьТекст(Выборка.Контекст);
		
		Если ТипЗнч(ДокументВыполнения) = Тип("ДокументСсылка.ВыполнениеЗапроса") Тогда
			
			ТекстПлана = АнализЗапросов.ОформитьПлан(Выборка.План, Выборка.ТипСУБД);
			ПланЗапроса.УстановитьТекст(ТекстПлана);
			ЗапросSQL.УстановитьТекст(Выборка.Текст);
			ЗапросSDBL.УстановитьТекст(Выборка.МетаТекст);
			ПараметрыЗапроса = Выборка.ПараметрыЗапроса;
			ПредставлениеПараметровЗапроса = СтрЗаменить(ПараметрыЗапроса, Символы.ПС, ", ");
			ПредставлениеПараметровЗапроса = ?(
				Прав(ПредставлениеПараметровЗапроса, 2) = ", ",
				Лев(ПредставлениеПараметровЗапроса, СтрДлина(ПредставлениеПараметровЗапроса) - 2),
				ПредставлениеПараметровЗапроса
			);
			ЭтотОбъект.Заголовок = "Выполнение запроса";
		Иначе
			ЭтотОбъект.Заголовок = "Выполнение кода конфигурации";
			Элементы.СтраницаЗапрос.Видимость = Ложь;
			Элементы.СтраницаПлан.Видимость = Ложь;
			Если ДокументВыполнения.ТипВыполнения = Перечисления.ТипыВыполненийКода.СерверныйВызов Тогда
				Элементы.СтраницаБлокировки.Видимость = Ложь;
			КонецЕсли;
			Элементы.БлокировкиИдентификаторРесурса.Видимость = Ложь;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьДанныеФормы();

&НаКлиенте
Процедура БлокировкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ДанныеСтроки = Блокировки.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	Если Поле.Имя = "БлокировкиРесурс" И ЗначениеЗаполнено(ДанныеСтроки.Ресурс) Тогда
		ПоказатьЗначение(, ДанныеСтроки.Ресурс);
	Иначе
		ПараметрыФормы = Новый Структура("Ключ", ДанныеСтроки.Ссылка);
		ФормаДокумента = ПолучитьФорму("Документ.Блокировка.ФормаОбъекта", ПараметрыФормы);
		ФормаДокумента.Открыть();
	КонецЕсли;
	
КонецПроцедуры



