
///////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

&НаСервере
Перем мВременныеТаблицы;     // Менеджер временных таблиц

&НаСервере
Перем мЗапросыБлокировки;    // Запрос, выборка проблемных запросов


///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИнформационнаяБаза = Параметры.ИнформационнаяБаза;
	НачалоИнтервала = Параметры.НачалоИнтервала;
	КонецИнтервала = Параметры.КонецИнтервала;
	ПроблемнаяСтрокаКонтекста = Параметры.ПроблемнаяСтрокаКонтекста;
	ПроблемныйРесурс = Параметры.ПроблемныйРесурс;
	ПроблемныйПользователь = Параметры.ПроблемныйПользователь;
	Если ЗначениеЗаполнено(ПроблемныйПользователь) Тогда
		ОтключитьОтборПоКонтексту = Истина;
	КонецЕсли;
	
	СпособГруппировки = Параметры.СпособГруппировки;
	ТипРесурса = ПроблемныйРесурс.Тип;
	
	Если НЕ ЗначениеЗаполнено(НачалоИнтервала) Тогда
		Сообщить("Не указано начало интервала!");
		Отказ = Истина;
	ИначеЕсли НЕ ЗначениеЗаполнено(КонецИнтервала) Тогда
		Сообщить("Не указан конец интервала!");
		Отказ = Истина;
	ИначеЕсли НЕ ЗначениеЗаполнено(ИнформационнаяБаза) Тогда
		Сообщить("Не указана информационная база!");
		Отказ = Истина;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат
	КонецЕсли;
	
	УстановитьПеременныеФормы();
	
	// В режиме "Различные" не отображаются все колонки
	УстановитьВидимостьКолонкамЗапросов();
	
	// Заполнить таблицу Контексты.
	ЗаполнитьТаблицуКонтекстов()
	
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
// Процедура обработки события "ПриАктивизацииСтроки" элемета формы Контексты.
// Заполняет таблицу Запросы.
//
Процедура КонтекстыПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.Контексты.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		ЗаполнитьТаблицуЗапросов(ТекущиеДанные.ЗаблокированныйСсылка, ТекущиеДанные.БлокирующийСсылка, ТекущиеДанные.Ресурс, ТекущиеДанные.ТипБлокировки);
	КонецЕсли;
	
КонецПроцедуры // КонтекстыПриАктивизацииСтроки()

&НаКлиенте
// Процедура обработки события "Выбор" элемета формы Контексты.
// Открывает форму контекста.
//
Процедура КонтекстыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеСтроки = Контексты.НайтиПоИдентификатору(ВыбраннаяСтрока);
	Если Поле.Имя = "КонтекстыЗаблокированныйКонтекст" Тогда
		ПоказатьЗначение(, ДанныеСтроки.ЗаблокированныйСсылка);
	ИначеЕсли Поле.Имя = "КонтекстыБлокирующийКонтекст" Тогда
		ПоказатьЗначение(, ДанныеСтроки.БлокирующийСсылка);
	ИначеЕсли Поле.Имя = "КонтекстыРесурсОбъектМетаданных" Тогда
		ПоказатьЗначение(, ДанныеСтроки.РесурсОбъектМетаданных);
	ИначеЕсли Поле.Имя = "КонтекстыРесурсТаблица" Тогда
		ПоказатьЗначение(, ДанныеСтроки.РесурсТаблица);
	ИначеЕсли Поле.Имя = "КонтекстыРесурс" Тогда
		ПоказатьЗначение(, ДанныеСтроки.Ресурс);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Процедура обработки события "Выбор" элемета формы Запросы.
// Открывает форму заблокированного или блокирующего запроса.
// Открывает форму ожидания на блокировке.
// Открывает форму просмотра текста запроса.
//
Процедура ЗапросыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеСтроки = Запросы.НайтиПоИдентификатору(ВыбраннаяСтрока);
	ВключенаГруппировка = (СпособГруппировки <> "БезГруппировки");
	
	// Открыть форму заблокированного или блокирующего запроса.
	Если Поле.Имя = "ЗапросыЗаблокированныйЗапрос" Или Поле.Имя = "ЗапросыЗаблокированныйКонтекст" Тогда
		ИнтерфейсыКлиент.ОткрытьВыполнениеЗапроса(ДанныеСтроки.ЗаблокированноеВыполнение);
	ИначеЕсли Поле.Имя = "ЗапросыБлокирующийЗапрос" Или Поле.Имя = "ЗапросыБлокирующийКонтекст" Тогда
		ИнтерфейсыКлиент.ОткрытьВыполнениеЗапроса(ДанныеСтроки.БлокирующееВыполнение);
	ИначеЕсли Не ВключенаГруппировка Тогда
		// Открыть форму ожидания на блокировке.
		ПоказатьЗначение(, ДанныеСтроки.ОжиданиеСсылка);
	КонецЕсли;
	
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
// Процедура устанавляет видемость некоторым колонкам таблицы Запросы.
//
Процедура УстановитьВидимостьКолонкамЗапросов()
	
	ВключенаГруппировка = (СпособГруппировки <> "БезГруппировки");
	Элементы.ЗапросыГруппаДата.Видимость                  = НЕ ВключенаГруппировка;
	Элементы.ЗапросыСтатус.Видимость                      = НЕ ВключенаГруппировка;
	Элементы.ЗапросыЗаблокированныйПользователь.Видимость = НЕ ВключенаГруппировка;
	Элементы.ЗапросыБлокирующийПользователь.Видимость     = НЕ ВключенаГруппировка;
	
КонецПроцедуры // УстановитьВидимостьКолонкамЗапросов()


///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ВЫБОРА ДАННЫХ

&НаСервере
Процедура ИнициализироватьВременныеТаблицы()
	
	// Создать временные таблицы для вычисления веса проблем.
	мВременныеТаблицы = Новый МенеджерВременныхТаблиц;
	ЗаполнитьВТОжиданияКоличество();
	ЗаполнитьВТКонтекстВес();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПеременныеФормы()
	
	// Получить коэффицент ожидания на блокировках
	КоэффицентОжидания = ПоказателиПроизводительности.ПолучитьВесовойКоэффициент(Справочники.Показатели.АнализОжиданийНаБлокировках);
	КоэффицентОжидания = ?(КоэффицентОжидания = 0, 1, КоэффицентОжидания);
	
	// Закешировать значения
	ТипРесурсаОбъектМетаданных  = Перечисления.ТипыРесурсов.ОбъектМетаданных;
	ТипРесурсаТаблица           = Перечисления.ТипыРесурсов.Таблица;
	ТипРесурсаИндекс            = Перечисления.ТипыРесурсов.Индекс;
	
КонецПроцедуры

&НаСервере
// Функция возвращает текст запроса выбора проблемных запросов в случае анализа ожиданий по контекстам.
//
// Параметры:
//  ТипБлокировки - ПеречислениеСсылка.ТипБлокировки, тип анализируемой блокировки
//
// Возвращаемое значение:
//  Строка - текст запроса.
//
Функция ТекстЗапросаОжиданияПоКонтексту(ТипБлокировки, ИмяРеквизитаКонтекста)
	
	Если ТипБлокировки = Перечисления.ТипыБлокировок.БлокировкаСУБД Тогда
		ТекстЗапроса = ТекстЗапросаОжиданияПоКонтекстуБлокировкиСУБД(ИмяРеквизитаКонтекста);
	Иначе
		ТекстЗапроса = ТекстЗапросаОжиданияПоКонтекстуУправляемыеБлокировки(ИмяРеквизитаКонтекста);
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции //ТекстЗапросаОжиданияПоКонтексту()

&НаСервере
// Функция возвращает текст запроса выбора проблемных запросов в случае анализа ожиданий по контекстам.
//
// Параметры:
//  ТипБлокировки - ПеречислениеСсылка.ТипБлокировки, тип анализируемой блокировки
//
// Возвращаемое значение:
//  Строка - текст запроса.
//
Функция ТекстЗапросаОжиданияПоКонтекстуБлокировкиСУБД(ИмяРеквизитаКонтекста)
	
	ВключенаГруппировка = (СпособГруппировки <> "БезГруппировки");
	Если НЕ ВключенаГруппировка Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ДетальныйОтчет.ЗаблокированныйЗапрос.Текст КАК ЗаблокированныйТекстЗапроса,
		|	ДетальныйОтчет.БлокирующийЗапрос.Текст КАК БлокирующийТекстЗапроса,
		|	*
		|ИЗ
		|(
		|ВЫБРАТЬ
		|	КонтекстыВес.КоличествоОжиданий КАК КоличествоОжиданий,
		|	Ожидание.Дата КАК ДатаВремяОжидания,
		|	Ожидание КАК ОжиданиеСсылка,
		|	Ожидание.ТипБлокировки КАК ТипБлокировки,
		|	СУММА(Вес) * &КоэффицентОжидания КАК Вес,
		|	Ожидание.ВремяОжидания / 1000 КАК ВремяОжидания,
		|	Ожидание.СтатусИнформации КАК Статус,
		|	Ожидание.Заблокирована.ВыполнениеЗапроса КАК ЗаблокированноеВыполнение,
		|	Ожидание.Заблокирована.ВыполнениеЗапроса.ТекстЗапроса КАК ЗаблокированныйЗапрос,
		|	Ожидание.Заблокирована.ВыполнениеЗапроса.ПользовательИБ КАК ЗаблокированныйПользователь,
		|	Ожидание.Заблокирована.ВыполнениеЗапроса.КонтекстСсылка КАК ЗаблокированныйКонтекст,
		|	Ожидание.Заблокирована.Состояние КАК ЗаблокированаСостояние,
		|	Ожидание.Блокирует.ВыполнениеЗапроса КАК БлокирующееВыполнение,
		|	Ожидание.Блокирует.ВыполнениеЗапроса.ТекстЗапроса КАК БлокирующийЗапрос,
		|	Ожидание.Блокирует.ВыполнениеЗапроса.ПользовательИБ КАК БлокирующийПользователь,
		|	Ожидание.Блокирует.ВыполнениеЗапроса.КонтекстСсылка КАК БлокирующийКонтекст,
		|	Ожидание.Блокирует.Режим КАК БлокирующийРежим,
		|	Ожидание.Блокирует.Состояние КАК БлокируетСостояние,
		|	ВЫБОР
		|		КОГДА Ожидание.Блокирует.Ресурс.Тип = &ОбъектМетаданных
		|			ТОГДА Ожидание.Блокирует.Ресурс
		|		КОГДА Ожидание.Блокирует.Ресурс.Тип = &Таблица
		|			ТОГДА Ожидание.Блокирует.Ресурс.Родитель
		|		ИНАЧЕ Ожидание.Блокирует.Ресурс.Родитель.Родитель
		|	КОНЕЦ КАК РесурсОбъектМетаданных,
		|	ВЫБОР
		|		КОГДА Ожидание.Блокирует.Ресурс.Тип = &Таблица
		|			ТОГДА Ожидание.Блокирует.Ресурс
		|		ИНАЧЕ Ожидание.Блокирует.Ресурс.Родитель
		|	КОНЕЦ КАК РесурсТаблица,
		|	ВЫБОР
		|		КОГДА Ожидание.Блокирует.Ресурс.Тип = &Индекс
		|			ТОГДА Ожидание.Блокирует.Ресурс
		|	КОНЕЦ КАК РесурсИндекс
		|	
		|ИЗ КонтекстыВес
		|
		|ГДЕ 
		|	(Контекст.ПоследняяСтрока = &Контекст ИЛИ &БезОтбораПоКонтексту)
		|	И (Ожидание.Заблокирована.ВыполнениеЗапроса.ПользовательИБ = &Пользователь
		|		ИЛИ Ожидание.Блокирует.ВыполнениеЗапроса.ПользовательИБ = &Пользователь
		|		ИЛИ &БезОтбораПоПользователю)
		|	И Ожидание.Блокирует.ВыполнениеЗапроса.КонтекстСсылка.ПоследняяСтрока = &БлокирующийКонтекст
		|	И Ожидание.Заблокирована.ВыполнениеЗапроса.КонтекстСсылка.ПоследняяСтрока = &ЗаблокированныйКонтекст
		|	И Ожидание.Блокирует.Ресурс = &Ресурс
		|	И Вес * &КоэффицентОжидания > 0
		|	И ВЫРАЗИТЬ (Ожидание.Блокирует.ВыполнениеЗапроса КАК Документ.ВыполнениеЗапроса) <> ЗНАЧЕНИЕ(Документ.ВыполнениеЗапроса.ПустаяСсылка)
		|	И ВЫРАЗИТЬ (Ожидание.Заблокирована.ВыполнениеЗапроса КАК Документ.ВыполнениеЗапроса) <> ЗНАЧЕНИЕ(Документ.ВыполнениеЗапроса.ПустаяСсылка)
		|СГРУППИРОВАТЬ ПО
		|	КонтекстыВес.КоличествоОжиданий,
		|	Ожидание.Дата,
		|	Ожидание,
		|	Ожидание.ТипБлокировки,
		|	Ожидание.ВремяОжидания / 1000,
		|	Ожидание.СтатусИнформации,
		|	Ожидание.Заблокирована.ВыполнениеЗапроса,
		|	Ожидание.Заблокирована.ВыполнениеЗапроса.Запрос,
		|	Ожидание.Блокирует.ВыполнениеЗапроса,
		|	Ожидание.Блокирует.ВыполнениеЗапроса.Запрос,
		|	Ожидание.Блокирует.ВыполнениеЗапроса.ПользовательИБ,
		|	Ожидание.Блокирует.ВыполнениеЗапроса.КонтекстСсылка,
		|	Ожидание.Блокирует.Режим,
		|	Ожидание.Заблокирована.ВыполнениеЗапроса.ПользовательИБ,
		|	Ожидание.Заблокирована.ВыполнениеЗапроса.КонтекстСсылка,
		|	Ожидание.Блокирует.Состояние,
		|	Ожидание.Заблокирована.Состояние,
		|	ВЫБОР
		|		КОГДА Ожидание.Блокирует.Ресурс.Тип = &ОбъектМетаданных
		|			ТОГДА Ожидание.Блокирует.Ресурс
		|		КОГДА Ожидание.Блокирует.Ресурс.Тип = &Таблица
		|			ТОГДА Ожидание.Блокирует.Ресурс.Родитель
		|		ИНАЧЕ Ожидание.Блокирует.Ресурс.Родитель.Родитель
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА Ожидание.Блокирует.Ресурс.Тип = &Таблица
		|			ТОГДА Ожидание.Блокирует.Ресурс
		|		ИНАЧЕ Ожидание.Блокирует.Ресурс.Родитель
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА Ожидание.Блокирует.Ресурс.Тип = &Индекс
		|			ТОГДА Ожидание.Блокирует.Ресурс
		|	КОНЕЦ
		|) КАК ДетальныйОтчет
		|	
		|УПОРЯДОЧИТЬ ПО
		|	ДетальныйОтчет.ВремяОжидания / ДетальныйОтчет.КоличествоОжиданий УБЫВ";
	Иначе
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	СУММА(Вес*&КоэффицентОжидания) КАК Вес,
		|	СУММА(Ожидание.ВремяОжидания / 1000) КАК ВремяОжидания,
		|	Ожидание.Заблокирована.ВыполнениеЗапроса КАК ЗаблокированноеВыполнение,
		|	Ожидание.Заблокирована.ВыполнениеЗапроса.Запрос,
		|	Ожидание.Блокирует.ВыполнениеЗапроса КАК БлокирующееВыполнение,
		|	Ожидание.Блокирует.ВыполнениеЗапроса.Запрос,
		|	Ожидание.Заблокирована.Состояние КАК ЗаблокированаСостояние,
		|	Ожидание.Блокирует.Состояние КАК БлокируетСостояние,
		|	Ожидание.Блокирует.ВыполнениеЗапроса.ТекстЗапроса КАК БлокирующийЗапрос,
		|	Ожидание.Заблокирована.ВыполнениеЗапроса.ТекстЗапроса КАК ЗаблокированныйЗапрос
		|	
		|ИЗ КонтекстыВес
		|	
		|ГДЕ
		|	(Контекст.ПоследняяСтрока = &Контекст ИЛИ &БезОтбораПоКонтексту)
		|	И (Ожидание.Блокирует.ВыполнениеЗапроса.ПользовательИБ = &Пользователь
		|		ИЛИ Ожидание.Заблокирована.ВыполнениеЗапроса.ПользовательИБ = &Пользователь
		|		ИЛИ &БезОтбораПоПользователю)
		|	И Ожидание.Блокирует.ВыполнениеЗапроса.КонтекстСсылка.ПоследняяСтрока = &БлокирующийКонтекст
		|	И Ожидание.Заблокирована.ВыполнениеЗапроса.КонтекстСсылка.ПоследняяСтрока = &ЗаблокированныйКонтекст
		|	И Ожидание.Блокирует.Ресурс = &Ресурс
		|	И Вес * &КоэффицентОжидания > 0
		|	И ВЫРАЗИТЬ (Ожидание.Блокирует.ВыполнениеЗапроса КАК Документ.ВыполнениеЗапроса) <> ЗНАЧЕНИЕ(Документ.ВыполнениеЗапроса.ПустаяСсылка)
		|	И ВЫРАЗИТЬ (Ожидание.Заблокирована.ВыполнениеЗапроса КАК Документ.ВыполнениеЗапроса) <> ЗНАЧЕНИЕ(Документ.ВыполнениеЗапроса.ПустаяСсылка)
		|	
		|СГРУППИРОВАТЬ ПО
		|	Ожидание.Заблокирована.ВыполнениеЗапроса,
		|	Ожидание.Заблокирована.ВыполнениеЗапроса.Запрос,
		|	Ожидание.Блокирует.ВыполнениеЗапроса,
		|	Ожидание.Блокирует.ВыполнениеЗапроса.Запрос,
		|	Ожидание.Заблокирована.Состояние,
		|	Ожидание.Блокирует.Состояние,
		|	Ожидание.Блокирует.ВыполнениеЗапроса.ТекстЗапроса,
		|	Ожидание.Заблокирована.ВыполнениеЗапроса.ТекстЗапроса
		|	
		|ИТОГИ ПО
		|	Ожидание.Заблокирована.ВыполнениеЗапроса.Запрос,
		|	Ожидание.Блокирует.ВыполнениеЗапроса.Запрос
		|ИЕРАРХИЯ";
		
		Если ФункцияГруппировки = 1 Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СУММА(", "СРЕДНЕЕ(");
		ИначеЕсли ФункцияГруппировки = 2 Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СУММА(", "МАКСИМУМ(");
		КонецЕсли;
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
		"ВыполнениеЗапроса.КонтекстСсылка.ПоследняяСтрока", 
		"ВыполнениеЗапроса.КонтекстСсылка." + ИмяРеквизитаКонтекста);
	
	Возврат ТекстЗапроса;
	
КонецФункции //ТекстЗапросаОжиданияПоКонтекстуБлокировкиСУБД()

&НаСервере
// Функция возвращает текст запроса выбора проблемных запросов в случае анализа ожиданий по контекстам.
//
// Параметры:
//  ТипБлокировки - ПеречислениеСсылка.ТипБлокировки, тип анализируемой блокировки
//
// Возвращаемое значение:
//  Строка - текст запроса.
//
Функция ТекстЗапросаОжиданияПоКонтекстуУправляемыеБлокировки(ИмяРеквизитаКонтекста)
	
	ВключенаГруппировка = (СпособГруппировки <> "БезГруппировки");
	Если НЕ ВключенаГруппировка Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	"""" КАК ЗаблокированныйЗапрос,
		|	"""" КАК БлокирующийЗапрос,
		|	"""" КАК ЗаблокированныйТекстЗапроса,
		|	"""" КАК БлокирующийТекстЗапроса,
		|	*
		|ИЗ
		|(
		|ВЫБРАТЬ
		|	КонтекстыВес.КоличествоОжиданий КАК КоличествоОжиданий,
		|	Ожидание.Дата КАК ДатаВремяОжидания,
		|	Ожидание КАК ОжиданиеСсылка,
		|	Ожидание.ТипБлокировки КАК ТипБлокировки,
		|	СУММА(Вес) * &КоэффицентОжидания КАК Вес,
		|	Ожидание.ВремяОжидания / 1000 КАК ВремяОжидания,
		|	Ожидание.СтатусИнформации КАК Статус,
		|	Ожидание.Заблокирована.ВыполнениеЗапроса КАК ЗаблокированноеВыполнение,
		|	Ожидание.Заблокирована.ВыполнениеЗапроса.ПользовательИБ КАК ЗаблокированныйПользователь,
		|	Ожидание.Заблокирована.ВыполнениеЗапроса.КонтекстСсылка.ПоследняяСтрока КАК ЗаблокированныйКонтекст,
		|	Ожидание.Заблокирована.Состояние КАК ЗаблокированаСостояние,
		|	Ожидание.Блокирует.ВыполнениеЗапроса КАК БлокирующееВыполнение,
		|	Ожидание.Блокирует.ВыполнениеЗапроса.ПользовательИБ КАК БлокирующийПользователь,
		|	Ожидание.Блокирует.ВыполнениеЗапроса.КонтекстСсылка.ПоследняяСтрока КАК БлокирующийКонтекст,
		|	Ожидание.Блокирует.Режим КАК БлокирующийРежим,
		|	Ожидание.Блокирует.Состояние КАК БлокируетСостояние,
		|	ВЫБОР
		|		КОГДА Ожидание.Блокирует.Ресурс.Тип = &ОбъектМетаданных
		|			ТОГДА Ожидание.Блокирует.Ресурс
		|		КОГДА Ожидание.Блокирует.Ресурс.Тип = &Таблица
		|			ТОГДА Ожидание.Блокирует.Ресурс.Родитель
		|		ИНАЧЕ Ожидание.Блокирует.Ресурс.Родитель.Родитель
		|	КОНЕЦ КАК РесурсОбъектМетаданных,
		|	ВЫБОР
		|		КОГДА Ожидание.Блокирует.Ресурс.Тип = &Таблица
		|			ТОГДА Ожидание.Блокирует.Ресурс
		|		ИНАЧЕ Ожидание.Блокирует.Ресурс.Родитель
		|	КОНЕЦ КАК РесурсТаблица,
		|	ВЫБОР
		|		КОГДА Ожидание.Блокирует.Ресурс.Тип = &Индекс
		|			ТОГДА Ожидание.Блокирует.Ресурс
		|	КОНЕЦ КАК РесурсИндекс
		|	
		|ИЗ КонтекстыВес
		|
		|ГДЕ
		|	(Контекст.ПоследняяСтрока = &Контекст ИЛИ &БезОтбораПоКонтексту)
		|	И (Ожидание.Заблокирована.ВыполнениеЗапроса.ПользовательИБ = &Пользователь
		|		ИЛИ Ожидание.Блокирует.ВыполнениеЗапроса.ПользовательИБ = &Пользователь
		|		ИЛИ &БезОтбораПоПользователю)
		|	И Ожидание.Блокирует.ВыполнениеЗапроса.КонтекстСсылка.ПоследняяСтрока = &БлокирующийКонтекст
		|	И Ожидание.Заблокирована.ВыполнениеЗапроса.КонтекстСсылка.ПоследняяСтрока = &ЗаблокированныйКонтекст
		|	И Ожидание.Блокирует.Ресурс = &Ресурс
		|	И Вес * &КоэффицентОжидания > 0
		|	И ВЫРАЗИТЬ (Ожидание.Блокирует.ВыполнениеЗапроса КАК Документ.ВыполнениеКода) <> ЗНАЧЕНИЕ(Документ.ВыполнениеКода.ПустаяСсылка)
		|	И ВЫРАЗИТЬ (Ожидание.Заблокирована.ВыполнениеЗапроса КАК Документ.ВыполнениеКода) <> ЗНАЧЕНИЕ(Документ.ВыполнениеКода.ПустаяСсылка)
		|СГРУППИРОВАТЬ ПО
		|	КонтекстыВес.КоличествоОжиданий,
		|	Ожидание.Дата,
		|	Ожидание,
		|	Ожидание.ТипБлокировки,
		|	Ожидание.ВремяОжидания / 1000,
		|	Ожидание.СтатусИнформации,
		|	Ожидание.Заблокирована.ВыполнениеЗапроса,
		|	Ожидание.Блокирует.ВыполнениеЗапроса,
		|	Ожидание.Блокирует.ВыполнениеЗапроса.ПользовательИБ,
		|	Ожидание.Блокирует.ВыполнениеЗапроса.КонтекстСсылка,
		|	Ожидание.Блокирует.Режим,
		|	Ожидание.Заблокирована.ВыполнениеЗапроса.ПользовательИБ,
		|	Ожидание.Заблокирована.ВыполнениеЗапроса.КонтекстСсылка,
		|	Ожидание.Блокирует.Состояние,
		|	Ожидание.Заблокирована.Состояние,
		|	ВЫБОР
		|		КОГДА Ожидание.Блокирует.Ресурс.Тип = &ОбъектМетаданных
		|			ТОГДА Ожидание.Блокирует.Ресурс
		|		КОГДА Ожидание.Блокирует.Ресурс.Тип = &Таблица
		|			ТОГДА Ожидание.Блокирует.Ресурс.Родитель
		|		ИНАЧЕ Ожидание.Блокирует.Ресурс.Родитель.Родитель
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА Ожидание.Блокирует.Ресурс.Тип = &Таблица
		|			ТОГДА Ожидание.Блокирует.Ресурс
		|		ИНАЧЕ Ожидание.Блокирует.Ресурс.Родитель
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА Ожидание.Блокирует.Ресурс.Тип = &Индекс
		|			ТОГДА Ожидание.Блокирует.Ресурс
		|	КОНЕЦ
		|) КАК ДетальныйОтчет
		|	
		|УПОРЯДОЧИТЬ ПО
		|	ДетальныйОтчет.ВремяОжидания / ДетальныйОтчет.КоличествоОжиданий УБЫВ";
	Иначе
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	СУММА(Вес*&КоэффицентОжидания) КАК Вес,
		|	СУММА(Ожидание.ВремяОжидания / 1000) КАК ВремяОжидания,
		|	Ожидание.Заблокирована.ВыполнениеЗапроса КАК ЗаблокированноеВыполнение,
		|	Ожидание.Заблокирована.ВыполнениеЗапроса.КонтекстСсылка.ПоследняяСтрока КАК ЗаблокированныйКонтекст,
		|	Ожидание.Блокирует.ВыполнениеЗапроса КАК БлокирующееВыполнение,
		|	Ожидание.Блокирует.ВыполнениеЗапроса.КонтекстСсылка.ПоследняяСтрока КАК БлокирующийКонтекст,
		|	Ожидание.Заблокирована.Состояние КАК ЗаблокированаСостояние,
		|	Ожидание.Блокирует.Состояние КАК БлокируетСостояние,
		|	Ожидание.Блокирует.ВыполнениеЗапроса.ХешКонтекста,
		|	Ожидание.Заблокирована.ВыполнениеЗапроса.ХешКонтекста
		|	
		|ИЗ КонтекстыВес
		|	
		|ГДЕ
		|	(Контекст.ПоследняяСтрока = &Контекст ИЛИ &БезОтбораПоКонтексту)
		|	И (Ожидание.Блокирует.ВыполнениеЗапроса.ПользовательИБ = &Пользователь
		|		ИЛИ Ожидание.Заблокирована.ВыполнениеЗапроса.ПользовательИБ = &Пользователь
		|		ИЛИ &БезОтбораПоПользователю)
		|	И Ожидание.Блокирует.ВыполнениеЗапроса.КонтекстСсылка.ПоследняяСтрока = &БлокирующийКонтекст
		|	И Ожидание.Заблокирована.ВыполнениеЗапроса.КонтекстСсылка.ПоследняяСтрока = &ЗаблокированныйКонтекст
		|	И Ожидание.Блокирует.Ресурс = &Ресурс
		|	И Вес * &КоэффицентОжидания > 0
		|	И ВЫРАЗИТЬ (Ожидание.Блокирует.ВыполнениеЗапроса КАК Документ.ВыполнениеКода) <> ЗНАЧЕНИЕ(Документ.ВыполнениеКода.ПустаяСсылка)
		|	И ВЫРАЗИТЬ (Ожидание.Заблокирована.ВыполнениеЗапроса КАК Документ.ВыполнениеКода) <> ЗНАЧЕНИЕ(Документ.ВыполнениеКода.ПустаяСсылка)
		|	
		|СГРУППИРОВАТЬ ПО
		|	Ожидание.Заблокирована.ВыполнениеЗапроса,
		|	Ожидание.Заблокирована.ВыполнениеЗапроса.КонтекстСсылка,
		|	Ожидание.Блокирует.ВыполнениеЗапроса,
		|	Ожидание.Блокирует.ВыполнениеЗапроса.КонтекстСсылка,
		|	Ожидание.Заблокирована.Состояние,
		|	Ожидание.Блокирует.Состояние,
		|	Ожидание.Блокирует.ВыполнениеЗапроса.ХешКонтекста,
		|	Ожидание.Заблокирована.ВыполнениеЗапроса.ХешКонтекста
		|	
		|ИТОГИ ПО
		|	Ожидание.Блокирует.ВыполнениеЗапроса.ХешКонтекста,
		|	Ожидание.Заблокирована.ВыполнениеЗапроса.ХешКонтекста
		|ИЕРАРХИЯ";
		
		Если ФункцияГруппировки = 1 Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СУММА(", "СРЕДНЕЕ(");
		ИначеЕсли ФункцияГруппировки = 2 Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СУММА(", "МАКСИМУМ(");
		КонецЕсли;
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
		"ВыполнениеЗапроса.КонтекстСсылка.ПоследняяСтрока", 
		"ВыполнениеЗапроса.КонтекстСсылка." + ИмяРеквизитаКонтекста);
	
	Возврат ТекстЗапроса;
	
КонецФункции //ТекстЗапросаОжиданияПоКонтекстуУправляемыеБлокировки()

&НаСервере
// Функция возвращает текст запроса выбора проблемных запросов в случае анализа ожиданий по ресурсам.
//
// Параметры:
//  ТипБлокировки - ПеречислениеСсылка.ТипБлокировки, тип анализируемой блокировки
//
// Возвращаемое значение:
//  Строка - текст запроса.
//
Функция ТекстЗапросаОжиданияПоРесурсу(ТипБлокировки)
	
	ВключенаГруппировка = (СпособГруппировки <> "БезГруппировки");
	Если НЕ ВключенаГруппировка Тогда
		
		Если ТипБлокировки = Перечисления.ТипыБлокировок.БлокировкаСУБД Тогда
			
			ТекстЗапроса = "ВЫБРАТЬ
			               |	ДетальныйОтчет.ЗаблокированныйЗапрос.Текст КАК ЗаблокированныйТекстЗапроса,
			               |	ДетальныйОтчет.БлокирующийЗапрос.Текст КАК БлокирующийТекстЗапроса,
			               |*
			               |ИЗ
			               |(
			               |ВЫБРАТЬ
			               |	ОжиданиеНаБлокировке.Дата КАК ДатаВремяОжидания,
			               |	ОжиданиеНаБлокировке.Ссылка КАК ОжиданиеСсылка,
			               |	(ОжиданиеНаБлокировке.ВремяОжидания / 1000 / ОжиданияКоличество.Количество) * &КоэффицентОжидания КАК Вес,
			               |	ОжиданиеНаБлокировке.ТипБлокировки КАК ТипБлокировки,
			               |	ОжиданиеНаБлокировке.ВремяОжидания / 1000 КАК ВремяОжидания,
			               |	ОжиданиеНаБлокировке.СтатусИнформации КАК Статус,
			               |	ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса КАК ЗаблокированноеВыполнение,
			               |	ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса.ТекстЗапроса КАК ЗаблокированныйЗапрос,
			               |	ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса.ПользовательИБ КАК ЗаблокированныйПользователь,
			               |	ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса.КонтекстСсылка КАК ЗаблокированныйКонтекст,
			               |	ОжиданиеНаБлокировке.Заблокирована.Состояние КАК ЗаблокированаСостояние,
			               |	ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса КАК БлокирующееВыполнение,
			               |	ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса.ТекстЗапроса КАК БлокирующийЗапрос,
			               |	ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса.ПользовательИБ КАК БлокирующийПользователь,
			               |	ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса.КонтекстСсылка КАК БлокирующийКонтекст,
			               |	ОжиданиеНаБлокировке.Блокирует.Режим КАК БлокирующийРежим,
			               |	ОжиданиеНаБлокировке.Блокирует.Состояние КАК БлокируетСостояние,
			               |	ВЫБОР
			               |		КОГДА ОжиданиеНаБлокировке.Блокирует.Ресурс.Тип = &ОбъектМетаданных
			               |			ТОГДА ОжиданиеНаБлокировке.Блокирует.Ресурс
			               |		КОГДА ОжиданиеНаБлокировке.Блокирует.Ресурс.Тип = &Таблица
			               |			ТОГДА ОжиданиеНаБлокировке.Блокирует.Ресурс.Родитель
			               |		ИНАЧЕ ОжиданиеНаБлокировке.Блокирует.Ресурс.Родитель.Родитель
			               |	КОНЕЦ КАК РесурсОбъектМетаданных,
			               |	ВЫБОР
			               |		КОГДА ОжиданиеНаБлокировке.Блокирует.Ресурс.Тип = &Таблица
			               |			ТОГДА ОжиданиеНаБлокировке.Блокирует.Ресурс
			               |		ИНАЧЕ ОжиданиеНаБлокировке.Блокирует.Ресурс.Родитель
			               |	КОНЕЦ КАК РесурсТаблица,
			               |	ВЫБОР
			               |		КОГДА ОжиданиеНаБлокировке.Блокирует.Ресурс.Тип = &Индекс
			               |			ТОГДА ОжиданиеНаБлокировке.Блокирует.Ресурс
			               |	КОНЕЦ КАК РесурсИндекс
			               |
			               |	ИЗ
			               |		Документ.ОжиданиеНаБлокировке КАК ОжиданиеНаБлокировке
			               |			ЛЕВОЕ СОЕДИНЕНИЕ ОжиданияКоличество КАК ОжиданияКоличество
			               |			ПО (ОжиданияКоличество.Выполнение = ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса)
			               |	ГДЕ
			               |		ОжиданиеНаБлокировке.ИнформационнаяБаза = &ИБ
			               |		И ОжиданиеНаБлокировке.Дата МЕЖДУ &НачалоИнтервала И &КонецИнтервала
			               |		И ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса.КонтекстСсылка = &БлокирующийКонтекст
			               |		И ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса.КонтекстСсылка = &ЗаблокированныйКонтекст
			               |		И ОжиданиеНаБлокировке.Блокирует.Ресурс = &Ресурс
			               |		И ОжиданиеНаБлокировке.Блокирует.Ресурс.Тип = &ТипРесурса
			               |		И ОжиданиеНаБлокировке.ВремяОжидания / 1000 / ОжиданияКоличество.Количество > 0
			               |		И ВЫРАЗИТЬ (ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса КАК Документ.ВыполнениеЗапроса) <> ЗНАЧЕНИЕ(Документ.ВыполнениеЗапроса.ПустаяСсылка)
			               |		И ВЫРАЗИТЬ (ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса КАК Документ.ВыполнениеЗапроса) <> ЗНАЧЕНИЕ(Документ.ВыполнениеЗапроса.ПустаяСсылка)
			               |) КАК ДетальныйОтчет
			               |	
			               |УПОРЯДОЧИТЬ ПО
			               |	ДетальныйОтчет.Вес УБЫВ";
		Иначе
			
			ТекстЗапроса = "ВЫБРАТЬ
			               |*
			               |ИЗ
			               |(
			               |ВЫБРАТЬ
			               |	ОжиданиеНаБлокировке.Дата КАК ДатаВремяОжидания,
			               |	ОжиданиеНаБлокировке.Ссылка КАК ОжиданиеСсылка,
			               |	(ОжиданиеНаБлокировке.ВремяОжидания / 1000 / ОжиданияКоличество.Количество) * &КоэффицентОжидания КАК Вес,
			               |	ОжиданиеНаБлокировке.ТипБлокировки КАК ТипБлокировки,
			               |	ОжиданиеНаБлокировке.ВремяОжидания / 1000 КАК ВремяОжидания,
			               |	ОжиданиеНаБлокировке.СтатусИнформации КАК Статус,
			               |	ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса КАК ЗаблокированноеВыполнение,
			               |	ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса.ПользовательИБ КАК ЗаблокированныйПользователь,
			               |	ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса.КонтекстСсылка КАК ЗаблокированныйКонтекст,
			               |	ОжиданиеНаБлокировке.Заблокирована.Состояние КАК ЗаблокированаСостояние,
			               |	ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса КАК БлокирующееВыполнение,
			               |	ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса.ПользовательИБ КАК БлокирующийПользователь,
			               |	ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса.КонтекстСсылка КАК БлокирующийКонтекст,
			               |	ОжиданиеНаБлокировке.Блокирует.Режим КАК БлокирующийРежим,
			               |	ОжиданиеНаБлокировке.Блокирует.Состояние КАК БлокируетСостояние,
			               |	ВЫБОР
			               |		КОГДА ОжиданиеНаБлокировке.Блокирует.Ресурс.Тип = &ОбъектМетаданных
			               |			ТОГДА ОжиданиеНаБлокировке.Блокирует.Ресурс
			               |		КОГДА ОжиданиеНаБлокировке.Блокирует.Ресурс.Тип = &Таблица
			               |			ТОГДА ОжиданиеНаБлокировке.Блокирует.Ресурс.Родитель
			               |		ИНАЧЕ ОжиданиеНаБлокировке.Блокирует.Ресурс.Родитель.Родитель
			               |	КОНЕЦ КАК РесурсОбъектМетаданных,
			               |	ВЫБОР
			               |		КОГДА ОжиданиеНаБлокировке.Блокирует.Ресурс.Тип = &Таблица
			               |			ТОГДА ОжиданиеНаБлокировке.Блокирует.Ресурс
			               |		ИНАЧЕ ОжиданиеНаБлокировке.Блокирует.Ресурс.Родитель
			               |	КОНЕЦ КАК РесурсТаблица,
			               |	ВЫБОР
			               |		КОГДА ОжиданиеНаБлокировке.Блокирует.Ресурс.Тип = &Индекс
			               |			ТОГДА ОжиданиеНаБлокировке.Блокирует.Ресурс
			               |	КОНЕЦ КАК РесурсИндекс,
			               |	"""" КАК ЗаблокированныйТекстЗапроса,
			               |	"""" КАК БлокирующийТекстЗапроса,
			               |	"""" КАК ЗаблокированныйЗапрос,
			               |	"""" КАК БлокирующийЗапрос
			               |
			               |	ИЗ
			               |		Документ.ОжиданиеНаБлокировке КАК ОжиданиеНаБлокировке
			               |			ЛЕВОЕ СОЕДИНЕНИЕ ОжиданияКоличество КАК ОжиданияКоличество
			               |			ПО (ОжиданияКоличество.Выполнение = ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса)
			               |	ГДЕ
			               |		ОжиданиеНаБлокировке.ИнформационнаяБаза = &ИБ
			               |		И ОжиданиеНаБлокировке.Дата МЕЖДУ &НачалоИнтервала И &КонецИнтервала
			               |		И ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса.КонтекстСсылка = &БлокирующийКонтекст
			               |		И ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса.КонтекстСсылка = &ЗаблокированныйКонтекст
			               |		И ОжиданиеНаБлокировке.Блокирует.Ресурс = &Ресурс
			               |		И ОжиданиеНаБлокировке.Блокирует.Ресурс.Тип = &ТипРесурса
			               |		И ОжиданиеНаБлокировке.ВремяОжидания / 1000 / ОжиданияКоличество.Количество > 0
			               |		И ВЫРАЗИТЬ (ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса КАК Документ.ВыполнениеЗапроса) <> ЗНАЧЕНИЕ(Документ.ВыполнениеКода.ПустаяСсылка)
			               |		И ВЫРАЗИТЬ (ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса КАК Документ.ВыполнениеЗапроса) <> ЗНАЧЕНИЕ(Документ.ВыполнениеКода.ПустаяСсылка)
			               |) КАК ДетальныйОтчет
			               |	
			               |УПОРЯДОЧИТЬ ПО
			               |	ДетальныйОтчет.Вес УБЫВ";
			
		КонецЕсли;
		
	Иначе
		
		Если ТипБлокировки = Перечисления.ТипыБлокировок.БлокировкаСУБД Тогда
			
			ТекстЗапроса = "ВЫБРАТЬ
			               |	СУММА((ОжиданиеНаБлокировке.ВремяОжидания / 1000 / ОжиданияКоличество.Количество) * &КоэффицентОжидания) КАК Вес,
			               |	СУММА(ОжиданиеНаБлокировке.ВремяОжидания / 1000) КАК ВремяОжидания,
			               |	ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса КАК ЗаблокированноеВыполнение,
			               |	ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса.Запрос,
			               |	ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса КАК БлокирующееВыполнение,
			               |	ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса.Запрос,
			               |	ОжиданиеНаБлокировке.Заблокирована.Состояние КАК ЗаблокированаСостояние,
			               |	ОжиданиеНаБлокировке.Блокирует.Состояние КАК БлокируетСостояние,
			               |	ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса.ТекстЗапроса КАК БлокирующийЗапрос,
			               |	ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса.ТекстЗапроса КАК ЗаблокированныйЗапрос
			               |	
			               |	ИЗ
			               |		Документ.ОжиданиеНаБлокировке КАК ОжиданиеНаБлокировке
			               |			ЛЕВОЕ СОЕДИНЕНИЕ ОжиданияКоличество КАК ОжиданияКоличество
			               |			ПО (ОжиданияКоличество.Выполнение = ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса)
			               |	
			               |	ГДЕ
			               |		ОжиданиеНаБлокировке.ИнформационнаяБаза = &ИБ
			               |		И ОжиданиеНаБлокировке.Дата МЕЖДУ &НачалоИнтервала И &КонецИнтервала
			               |		И ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса.КонтекстСсылка = &БлокирующийКонтекст
			               |		И ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса.КонтекстСсылка = &ЗаблокированныйКонтекст
			               |		И ОжиданиеНаБлокировке.Блокирует.Ресурс = &Ресурс
			               |		И ОжиданиеНаБлокировке.Блокирует.Ресурс.Тип = &ТипРесурса
			               |		И ОжиданиеНаБлокировке.ВремяОжидания / 1000 / ОжиданияКоличество.Количество > 0
			               |		И ВЫРАЗИТЬ (ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса КАК Документ.ВыполнениеЗапроса) <> ЗНАЧЕНИЕ(Документ.ВыполнениеЗапроса.ПустаяСсылка)
			               |		И ВЫРАЗИТЬ (ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса КАК Документ.ВыполнениеЗапроса) <> ЗНАЧЕНИЕ(Документ.ВыполнениеЗапроса.ПустаяСсылка)
			               |	
			               |СГРУППИРОВАТЬ ПО
			               |	ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса,
			               |	ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса.Запрос,
			               |	ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса,
			               |	ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса.Запрос,
			               |	ОжиданиеНаБлокировке.Заблокирована.Состояние,
			               |	ОжиданиеНаБлокировке.Блокирует.Состояние,
			               |	ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса.ТекстЗапроса,
			               |	ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса.ТекстЗапроса
			               |	
			               |ИТОГИ ПО
			               |	ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса.Запрос,
			               |	ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса.Запрос
			               |ИЕРАРХИЯ";
			
		Иначе
			
			ТекстЗапроса = "ВЫБРАТЬ
			               |	СУММА((ОжиданиеНаБлокировке.ВремяОжидания / 1000 / ОжиданияКоличество.Количество) * &КоэффицентОжидания) КАК Вес,
			               |	СУММА(ОжиданиеНаБлокировке.ВремяОжидания / 1000) КАК ВремяОжидания,
			               |	ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса КАК ЗаблокированноеВыполнение,
			               |	ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса.КонтекстСсылка КАК ЗаблокированныйКонтекст,
			               |	ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса КАК БлокирующееВыполнение,
			               |	ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса.КонтекстСсылка КАК БлокирующийКонтекст,
			               |	ОжиданиеНаБлокировке.Заблокирована.Состояние КАК ЗаблокированаСостояние,
			               |	ОжиданиеНаБлокировке.Блокирует.Состояние КАК БлокируетСостояние,
			               |	ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса.ХешКонтекста,
			               |	ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса.ХешКонтекста
			               |	
			               |	ИЗ
			               |		Документ.ОжиданиеНаБлокировке КАК ОжиданиеНаБлокировке
			               |			ЛЕВОЕ СОЕДИНЕНИЕ ОжиданияКоличество КАК ОжиданияКоличество
			               |			ПО (ОжиданияКоличество.Выполнение = ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса)
			               |	
			               |	ГДЕ
			               |		ОжиданиеНаБлокировке.ИнформационнаяБаза = &ИБ
			               |		И ОжиданиеНаБлокировке.Дата МЕЖДУ &НачалоИнтервала И &КонецИнтервала
			               |		И ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса.КонтекстСсылка = &БлокирующийКонтекст
			               |		И ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса.КонтекстСсылка = &ЗаблокированныйКонтекст
			               |		И ОжиданиеНаБлокировке.Блокирует.Ресурс = &Ресурс
			               |		И ОжиданиеНаБлокировке.Блокирует.Ресурс.Тип = &ТипРесурса
			               |		И ОжиданиеНаБлокировке.ВремяОжидания / 1000 / ОжиданияКоличество.Количество > 0
			               |		И ВЫРАЗИТЬ (ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса КАК Документ.ВыполнениеЗапроса) <> ЗНАЧЕНИЕ(Документ.ВыполнениеКода.ПустаяСсылка)
			               |		И ВЫРАЗИТЬ (ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса КАК Документ.ВыполнениеЗапроса) <> ЗНАЧЕНИЕ(Документ.ВыполнениеКода.ПустаяСсылка)
			               |	
			               |СГРУППИРОВАТЬ ПО
			               |	ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса,
			               |	ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса.Запрос,
			               |	ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса,
			               |	ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса.Запрос,
			               |	ОжиданиеНаБлокировке.Заблокирована.Состояние,
			               |	ОжиданиеНаБлокировке.Блокирует.Состояние,
			               |	ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса.ХешКонтекста,
			               |	ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса.ХешКонтекста
			               |	
			               |ИТОГИ ПО
			               |	ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса.ХешКонтекста,
			               |	ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса.ХешКонтекста
			               |ИЕРАРХИЯ";
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ФункцияГруппировки = 1 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СУММА(", "СРЕДНЕЕ(");
	ИначеЕсли ФункцияГруппировки = 2 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СУММА(", "МАКСИМУМ(");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаОжиданияПоРесурсу()

&НаСервере
// Функция возвращает текст запроса выбора проблемных контекстов в случае анализа ожиданий по контекстам.
//
// Возвращаемое значение:
//  Строка - текст запроса.
//
Функция ТекстЗапросаКонтексты(ИмяРеквизитаКонтекста)
	
	ВключенаГруппировка = (СпособГруппировки <> "БезГруппировки");
	Если НЕ ВключенаГруппировка Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	КонтекстыВес.Вес * &КоэффицентОжидания КАК Вес,
		|	КонтекстыВес.ТипБлокировки КАК ТипБлокировки,
		|	КонтекстыВес.Блокирует.ВыполнениеЗапроса.КонтекстСсылка.ПоследняяСтрока КАК БлокирующийСсылка,
		|	КонтекстыВес.Заблокирована.ВыполнениеЗапроса.КонтекстСсылка.ПоследняяСтрока КАК ЗаблокированныйСсылка,
		|	КонтекстыВес.Блокирует.ВыполнениеЗапроса.КонтекстСсылка.ПоследняяСтрока КАК БлокирующийКонтекст,
		|	КонтекстыВес.Заблокирована.ВыполнениеЗапроса.КонтекстСсылка.ПоследняяСтрока КАК ЗаблокированныйКонтекст,
		|	КонтекстыВес.Блокирует.Ресурс КАК Ресурс,
		|	ВЫБОР
		|		КОГДА КонтекстыВес.Блокирует.Ресурс.Тип = &ОбъектМетаданных
		|			ТОГДА КонтекстыВес.Блокирует.Ресурс
		|		КОГДА КонтекстыВес.Блокирует.Ресурс.Тип = &Таблица
		|			ТОГДА КонтекстыВес.Блокирует.Ресурс.Родитель
		|		ИНАЧЕ КонтекстыВес.Блокирует.Ресурс.Родитель.Родитель
		|	КОНЕЦ КАК РесурсОбъектМетаданных,
		|	ВЫБОР
		|		КОГДА КонтекстыВес.Блокирует.Ресурс.Тип = &Таблица
		|			ТОГДА КонтекстыВес.Блокирует.Ресурс
		|		ИНАЧЕ КонтекстыВес.Блокирует.Ресурс.Родитель
		|	КОНЕЦ КАК РесурсТаблица,
		|	ВЫБОР
		|		КОГДА КонтекстыВес.Блокирует.Ресурс.Тип = &Индекс
		|			ТОГДА КонтекстыВес.Блокирует.Ресурс
		|	КОНЕЦ КАК РесурсИндекс
		|ИЗ
		|	КонтекстыВес КАК КонтекстыВес
		|ГДЕ
		|	(КонтекстыВес.Контекст.ПоследняяСтрока = &СтрокаКонтекста ИЛИ &БезОтбораПоКонтексту)
		|	И КонтекстыВес.Вес * &КоэффицентОжидания > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Вес УБЫВ";
		
	Иначе
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	СУММА(КонтекстыВес.Вес) * &КоэффицентОжидания КАК Вес,
		|	КонтекстыВес.ТипБлокировки КАК ТипБлокировки,
		|	КонтекстыВес.Блокирует.ВыполнениеЗапроса.КонтекстСсылка.ПоследняяСтрока КАК БлокирующийСсылка,
		|	КонтекстыВес.Заблокирована.ВыполнениеЗапроса.КонтекстСсылка.ПоследняяСтрока КАК ЗаблокированныйСсылка,
		|	КонтекстыВес.Блокирует.ВыполнениеЗапроса.КонтекстСсылка.ПоследняяСтрока КАК БлокирующийКонтекст,
		|	КонтекстыВес.Заблокирована.ВыполнениеЗапроса.КонтекстСсылка.ПоследняяСтрока КАК ЗаблокированныйКонтекст,
		|	КонтекстыВес.Блокирует.Ресурс КАК Ресурс,
		|	ВЫБОР
		|		КОГДА КонтекстыВес.Блокирует.Ресурс.Тип = &ОбъектМетаданных
		|			ТОГДА КонтекстыВес.Блокирует.Ресурс
		|		КОГДА КонтекстыВес.Блокирует.Ресурс.Тип = &Таблица
		|			ТОГДА КонтекстыВес.Блокирует.Ресурс.Родитель
		|		ИНАЧЕ КонтекстыВес.Блокирует.Ресурс.Родитель.Родитель
		|	КОНЕЦ КАК РесурсОбъектМетаданных,
		|	ВЫБОР
		|		КОГДА КонтекстыВес.Блокирует.Ресурс.Тип = &Таблица
		|			ТОГДА КонтекстыВес.Блокирует.Ресурс
		|		ИНАЧЕ КонтекстыВес.Блокирует.Ресурс.Родитель
		|	КОНЕЦ КАК РесурсТаблица,
		|	ВЫБОР
		|		КОГДА КонтекстыВес.Блокирует.Ресурс.Тип = &Индекс
		|			ТОГДА КонтекстыВес.Блокирует.Ресурс
		|	КОНЕЦ КАК РесурсИндекс
		|ИЗ
		|	КонтекстыВес КАК КонтекстыВес
		|ГДЕ
		|	(КонтекстыВес.Контекст.ПоследняяСтрока = &СтрокаКонтекста ИЛИ &БезОтбораПоКонтексту)
		|	И КонтекстыВес.Вес * &КоэффицентОжидания > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	КонтекстыВес.ТипБлокировки,
		|	КонтекстыВес.Блокирует.ВыполнениеЗапроса.КонтекстСсылка.ПоследняяСтрока,
		|	КонтекстыВес.Заблокирована.ВыполнениеЗапроса.КонтекстСсылка.ПоследняяСтрока,
		|	КонтекстыВес.Блокирует.Ресурс,
		|	ВЫБОР
		|		КОГДА КонтекстыВес.Блокирует.Ресурс.Тип = &ОбъектМетаданных
		|			ТОГДА КонтекстыВес.Блокирует.Ресурс
		|		КОГДА КонтекстыВес.Блокирует.Ресурс.Тип = &Таблица
		|			ТОГДА КонтекстыВес.Блокирует.Ресурс.Родитель
		|		ИНАЧЕ КонтекстыВес.Блокирует.Ресурс.Родитель.Родитель
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА КонтекстыВес.Блокирует.Ресурс.Тип = &Таблица
		|			ТОГДА КонтекстыВес.Блокирует.Ресурс
		|		ИНАЧЕ КонтекстыВес.Блокирует.Ресурс.Родитель
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА КонтекстыВес.Блокирует.Ресурс.Тип = &Индекс
		|			ТОГДА КонтекстыВес.Блокирует.Ресурс
		|	КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	Вес УБЫВ";
		
		Если ФункцияГруппировки = 1 Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СУММА(", "СРЕДНЕЕ(");
		ИначеЕсли ФункцияГруппировки = 2 Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СУММА(", "МАКСИМУМ(");
		КонецЕсли;
		
	КонецЕсли;
	
	// Вид контекста
	Если ИмяРеквизитаКонтекста = "Ссылка" Тогда
		ИмяРеквизитаКонтекстаРезультат = "Контекст";
	Иначе
		ИмяРеквизитаКонтекстаРезультат = ИмяРеквизитаКонтекста;
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
		".КонтекстСсылка.ПоследняяСтрока КАК БлокирующийКонтекст", 
		".КонтекстСсылка." + ИмяРеквизитаКонтекстаРезультат + " КАК БлокирующийКонтекст");
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
		".КонтекстСсылка.ПоследняяСтрока КАК ЗаблокированныйКонтекст", 
		".КонтекстСсылка." + ИмяРеквизитаКонтекстаРезультат + " КАК ЗаблокированныйКонтекст");
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
		".КонтекстСсылка.ПоследняяСтрока", 
		".КонтекстСсылка." + ИмяРеквизитаКонтекста);
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаКонтексты()

&НаСервере
// Функция возвращает текст запроса выбора проблемных контекстов в случае анализа ожиданий по ресурсам.
//
// Возвращаемое значение:
//  Строка - текст запроса.
//
Функция ТекстЗапросаКонтекстыПоРесурсу(ИмяРеквизитаКонтекста)
	
	ТекстЗапроса = "ВЫБРАТЬ
				   |	СУММА(ОжиданиеНаБлокировке.ВремяОжидания / 1000 / ОжиданияКоличество.Количество) * &КоэффицентОжидания КАК Вес,
				   |	ОжиданиеНаБлокировке.ТипБлокировки КАК ТипБлокировки,
				   |	ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса.КонтекстСсылка КАК БлокирующийСсылка,
				   |	ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса.КонтекстСсылка КАК ЗаблокированныйСсылка,
				   |	ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса.КонтекстСсылка.Контекст КАК БлокирующийКонтекст,
				   |	ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса.КонтекстСсылка.Контекст КАК ЗаблокированныйКонтекст,
				   |	ОжиданиеНаБлокировке.Блокирует.Ресурс КАК Ресурс,
				   |	ВЫБОР
				   |		КОГДА ОжиданиеНаБлокировке.Блокирует.Ресурс.Тип = &ОбъектМетаданных
				   |			ТОГДА ОжиданиеНаБлокировке.Блокирует.Ресурс
				   |		КОГДА ОжиданиеНаБлокировке.Блокирует.Ресурс.Тип = &Таблица
				   |			ТОГДА ОжиданиеНаБлокировке.Блокирует.Ресурс.Родитель
				   |		ИНАЧЕ ОжиданиеНаБлокировке.Блокирует.Ресурс.Родитель.Родитель
				   |	КОНЕЦ КАК РесурсОбъектМетаданных,
				   |	ВЫБОР
				   |		КОГДА ОжиданиеНаБлокировке.Блокирует.Ресурс.Тип = &Таблица
				   |			ТОГДА ОжиданиеНаБлокировке.Блокирует.Ресурс
				   |		ИНАЧЕ ОжиданиеНаБлокировке.Блокирует.Ресурс.Родитель
				   |	КОНЕЦ КАК РесурсТаблица,
				   |	ВЫБОР
				   |		КОГДА ОжиданиеНаБлокировке.Блокирует.Ресурс.Тип = &Индекс
				   |			ТОГДА ОжиданиеНаБлокировке.Блокирует.Ресурс
				   |	КОНЕЦ КАК РесурсИндекс
				   |
				   |ИЗ
				   |	Документ.ОжиданиеНаБлокировке КАК ОжиданиеНаБлокировке
				   |		ЛЕВОЕ СОЕДИНЕНИЕ ОжиданияКоличество КАК ОжиданияКоличество
				   |		ПО (ОжиданияКоличество.Выполнение = ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса)
				   |ГДЕ
				   |	ОжиданиеНаБлокировке.ИнформационнаяБаза = &ИБ
				   |	И ОжиданиеНаБлокировке.Дата МЕЖДУ &НачалоИнтервала И &КонецИнтервала
				   |	И ОжиданиеНаБлокировке.Блокирует.Ресурс.Тип = &ТипРесурса
				   |	И ОжиданиеНаБлокировке.Блокирует.Ресурс = &Ресурс
				   |	И ОжиданиеНаБлокировке.ВремяОжидания / 1000 / ОжиданияКоличество.Количество > 0
				   |	
				   |СГРУППИРОВАТЬ ПО
				   |	ОжиданиеНаБлокировке.ТипБлокировки,
				   |	ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса.КонтекстСсылка,
				   |	ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса.КонтекстСсылка,
				   |	ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса.КонтекстСсылка.Контекст,
				   |	ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса.КонтекстСсылка.Контекст,
				   |	ОжиданиеНаБлокировке.Блокирует.Ресурс,
				   |	ВЫБОР
				   |		КОГДА ОжиданиеНаБлокировке.Блокирует.Ресурс.Тип = &ОбъектМетаданных
				   |			ТОГДА ОжиданиеНаБлокировке.Блокирует.Ресурс
				   |		КОГДА ОжиданиеНаБлокировке.Блокирует.Ресурс.Тип = &Таблица
				   |			ТОГДА ОжиданиеНаБлокировке.Блокирует.Ресурс.Родитель
				   |		ИНАЧЕ ОжиданиеНаБлокировке.Блокирует.Ресурс.Родитель.Родитель
				   |	КОНЕЦ,
				   |	ВЫБОР
				   |		КОГДА ОжиданиеНаБлокировке.Блокирует.Ресурс.Тип = &Таблица
				   |			ТОГДА ОжиданиеНаБлокировке.Блокирует.Ресурс
				   |		ИНАЧЕ ОжиданиеНаБлокировке.Блокирует.Ресурс.Родитель
				   |	КОНЕЦ,
				   |	ВЫБОР
				   |		КОГДА ОжиданиеНаБлокировке.Блокирует.Ресурс.Тип = &Индекс
				   |			ТОГДА ОжиданиеНаБлокировке.Блокирует.Ресурс
				   |	КОНЕЦ
				   |	
				   |УПОРЯДОЧИТЬ ПО Вес УБЫВ";
	
	// Вид контекста
	Если ИмяРеквизитаКонтекста = "Ссылка" Тогда
		ИмяРеквизитаКонтекстаРезультат = "Контекст";
	Иначе
		ИмяРеквизитаКонтекстаРезультат = ИмяРеквизитаКонтекста;
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
		"ВыполнениеЗапроса.КонтекстСсылка.Контекст", 
		"ВыполнениеЗапроса.КонтекстСсылка." + ИмяРеквизитаКонтекстаРезультат);
		
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаКонтекстыПоРесурсу()

&НаСервере
// Процедура заполняет временную таблицу ОжиданияКоличество.
// Используется в остальных запросах для вычисления веса.
//
Процедура ЗаполнитьВТОжиданияКоличество()
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = мВременныеТаблицы;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса КАК Выполнение,
	               |	КОЛИЧЕСТВО(*) КАК Количество
	               |ПОМЕСТИТЬ ОжиданияКоличество
	               |ИЗ
	               |	Документ.ОжиданиеНаБлокировке КАК ОжиданиеНаБлокировке
	               |ГДЕ
	               |	ОжиданиеНаБлокировке.ИнформационнаяБаза = &ИБ
	               |	И ОжиданиеНаБлокировке.Дата МЕЖДУ &НачалоИнтервала И &КонецИнтервала
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Выполнение";
	
	Запрос.УстановитьПараметр("НачалоИнтервала", НачалоИнтервала);
	Запрос.УстановитьПараметр("КонецИнтервала", КонецИнтервала);
	Запрос.УстановитьПараметр("ИБ",            ИнформационнаяБаза);
	
	Запрос.Выполнить();
	
КонецПроцедуры // ЗаполнитьВТОжиданияКоличество()

&НаСервере
// Процедура заполняет временную таблицу КонтекстыВес.
// Используется в остальных запросах для вычисления веса.
//
Процедура ЗаполнитьВТКонтекстВес()
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = мВременныеТаблицы;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОжиданиеНаБлокировке.ВремяОжидания / 1000 / ОжиданияКоличество.Количество / 2 КАК Вес,
	               |	ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса.КонтекстСсылка КАК Контекст,
	               |	ОжиданиеНаБлокировке.Ссылка КАК Ожидание,
	               |	ОжиданиеНаБлокировке.ТипБлокировки КАК ТипБлокировки,
	               |	ОжиданиеНаБлокировке.Блокирует КАК Блокирует,
	               |	ОжиданиеНаБлокировке.Заблокирована КАК Заблокирована,
	               |	ОжиданияКоличество.Количество КАК КоличествоОжиданий
	               |ПОМЕСТИТЬ КонтекстыВес
	               |ИЗ
	               |	Документ.ОжиданиеНаБлокировке КАК ОжиданиеНаБлокировке
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ОжиданияКоличество КАК ОжиданияКоличество
	               |		ПО (ОжиданияКоличество.Выполнение = ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса)
	               |ГДЕ
	               |	ОжиданиеНаБлокировке.ИнформационнаяБаза = &ИБ
	               |	И ОжиданиеНаБлокировке.Дата МЕЖДУ &НачалоИнтервала И &КонецИнтервала
	               |	И (ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса.ПользовательИБ = &Пользователь
	               |			ИЛИ &БезОтбораПоПользователю)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ОжиданиеНаБлокировке.ВремяОжидания / 1000 / ОжиданияКоличество.Количество / 2,
	               |	ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса.КонтекстСсылка,
	               |	ОжиданиеНаБлокировке.Ссылка,
	               |	ОжиданиеНаБлокировке.ТипБлокировки,
	               |	ОжиданиеНаБлокировке.Блокирует,
	               |	ОжиданиеНаБлокировке.Заблокирована,
	               |	ОжиданияКоличество.Количество
	               |ИЗ
	               |	Документ.ОжиданиеНаБлокировке КАК ОжиданиеНаБлокировке
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ОжиданияКоличество КАК ОжиданияКоличество
	               |		ПО (ОжиданияКоличество.Выполнение = ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса)
	               |ГДЕ
	               |	ОжиданиеНаБлокировке.ИнформационнаяБаза = &ИБ
	               |	И ОжиданиеНаБлокировке.Дата МЕЖДУ &НачалоИнтервала И &КонецИнтервала
	               |	И (ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса.ПользовательИБ = &Пользователь
	               |			ИЛИ &БезОтбораПоПользователю)
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Контекст";
	
	Запрос.УстановитьПараметр("НачалоИнтервала", НачалоИнтервала);
	Запрос.УстановитьПараметр("КонецИнтервала", КонецИнтервала);
	Запрос.УстановитьПараметр("ИБ",            ИнформационнаяБаза);
	Запрос.УстановитьПараметр("Пользователь", ПроблемныйПользователь);
	Запрос.УстановитьПараметр("БезОтбораПоПользователю", НЕ ЗначениеЗаполнено(ПроблемныйПользователь));
	
	Запрос.Выполнить();
	
КонецПроцедуры // ЗаполнитьВТКонтекстВес()

&НаСервере
// Процедура заполняет таблицу Конексты.
// Выполняет запрос выбора проблемных контекстов.
//
Процедура ЗаполнитьТаблицуКонтекстов()
	
	Если мВременныеТаблицы = Неопределено Тогда
		ИнициализироватьВременныеТаблицы();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = мВременныеТаблицы;
	
	// Сформировать текст запроса
	Если СпособГруппировки = "БезГруппировки" Тогда
		ИмяРеквизитаКонтекста = "ПоследняяСтрока";
	ИначеЕсли СпособГруппировки = "Контекст" Тогда
		ИмяРеквизитаКонтекста = "Ссылка";
	Иначе
		ИмяРеквизитаКонтекста = СпособГруппировки;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПроблемнаяСтрокаКонтекста) Или ЗначениеЗаполнено(ПроблемныйПользователь) Тогда
		
		// Получить текст запроса выбора проблемных контекстов по заданному контексту
		Запрос.Текст = ТекстЗапросаКонтексты(ИмяРеквизитаКонтекста);
		Запрос.УстановитьПараметр("СтрокаКонтекста", ПроблемнаяСтрокаКонтекста);
		Запрос.УстановитьПараметр("БезОтбораПоКонтексту", ОтключитьОтборПоКонтексту);
		
		Запрос.УстановитьПараметр("Пользователь", ПроблемныйПользователь);
		Запрос.УстановитьПараметр("БезОтбораПоПользователю", НЕ ЗначениеЗаполнено(ПроблемныйПользователь));
		
	Иначе
		
		// Получить текст запроса выбора проблемных контекстов по заданному ресурсу
		Запрос.Текст = ТекстЗапросаКонтекстыПоРесурсу(ИмяРеквизитаКонтекста);
		
		Запрос.УстановитьПараметр("ИБ",              ИнформационнаяБаза);
		Запрос.УстановитьПараметр("НачалоИнтервала", НачалоИнтервала);
		Запрос.УстановитьПараметр("КонецИнтервала",  КонецИнтервала);
		Запрос.УстановитьПараметр("ТипРесурса",      ТипРесурса);
		Запрос.УстановитьПараметр("Ресурс",          ПроблемныйРесурс);
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("КоэффицентОжидания", КоэффицентОжидания);
	Запрос.УстановитьПараметр("ОбъектМетаданных",   ТипРесурсаОбъектМетаданных);
	Запрос.УстановитьПараметр("Таблица",            ТипРесурсаТаблица);
	Запрос.УстановитьПараметр("Индекс",             ТипРесурсаИндекс);
	
	// Заполнить таблицу
	ТаблицаКонтексты = Запрос.Выполнить().Выгрузить();
	ТаблицаКонтексты.Колонки.Добавить("ИндексКартинки");
	ТаблицаКонтексты.Колонки.Добавить("ИндексКартинкиОбъектМетаданных");
	
	Для Каждого ТекСтр Из ТаблицаКонтексты Цикл
		ТекСтр.ИндексКартинкиОбъектМетаданных = СтруктураМетаданных.ПолучитьИндексКартинки(ТекСтр.РесурсОбъектМетаданных);
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ТаблицаКонтексты, "Контексты");
	
	// Заполнить копию таблицы (используется при установке отбора)
	ВсеКонтексты = Новый ХранилищеЗначения(ТаблицаКонтексты.Скопировать());
	
КонецПроцедуры // ЗаполнитьТаблицуКонтекстов()

&НаСервере
// Процедура заполняет таблицу Запросы.
// Выполняет запрос выбора проблемных запросов.
//
// Параметры:
//  ЗаблокированныйКонтекст - СправочникСсылка.Контекст
//  БлокирующийКонтекст     - СправочникСсылка.Контекст
//  ЗаблокированныйРесурс   - СправочникСсылка.Ресурс
//
Процедура ЗаполнитьТаблицуЗапросов(ЗаблокированныйКонтекст, БлокирующийКонтекст, ЗаблокированныйРесурс, ТипБлокировки)
	
	Если мВременныеТаблицы = Неопределено Тогда
		ИнициализироватьВременныеТаблицы();
	КонецЕсли;
	
	// Сформировать запрос выбора
	Если мЗапросыБлокировки = Неопределено Тогда
		
		мЗапросыБлокировки = Новый Запрос;
		мЗапросыБлокировки.МенеджерВременныхТаблиц =мВременныеТаблицы;
		
		// Установить общие параметры запроса
		мЗапросыБлокировки.УстановитьПараметр("КоэффицентОжидания", КоэффицентОжидания);
		мЗапросыБлокировки.УстановитьПараметр("ОбъектМетаданных",   ТипРесурсаОбъектМетаданных);
		мЗапросыБлокировки.УстановитьПараметр("Таблица",            ТипРесурсаТаблица);
		мЗапросыБлокировки.УстановитьПараметр("Индекс",             ТипРесурсаИндекс);
		
	КонецЕсли;
	
	Если СпособГруппировки = "БезГруппировки" Тогда
		ИмяРеквизитаКонтекста = "ПоследняяСтрока";
	ИначеЕсли СпособГруппировки = "Контекст" Тогда
		ИмяРеквизитаКонтекста = "Ссылка";
	Иначе
		ИмяРеквизитаКонтекста = СпособГруппировки;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПроблемнаяСтрокаКонтекста) Или ЗначениеЗаполнено(ПроблемныйПользователь) Тогда
		
		// Получить текст запроса выбора проблемных запросов по заданному контексту
		мЗапросыБлокировки.Текст = ТекстЗапросаОжиданияПоКонтексту(ТипБлокировки, ИмяРеквизитаКонтекста);
		
		// Установить параметры запроса выбора проблемных запросов по заданному контексту
		мЗапросыБлокировки.УстановитьПараметр("Контекст", ПроблемнаяСтрокаКонтекста);
		мЗапросыБлокировки.УстановитьПараметр("БезОтбораПоКонтексту", ОтключитьОтборПоКонтексту);
		
		мЗапросыБлокировки.УстановитьПараметр("Пользователь",         ПроблемныйПользователь);
		мЗапросыБлокировки.УстановитьПараметр("БезОтбораПоПользователю", НЕ ЗначениеЗаполнено(ПроблемныйПользователь));
		
	Иначе
		
		// Получить текст запроса выбора проблемных запросов по заданному ресурсу
		мЗапросыБлокировки.Текст = ТекстЗапросаОжиданияПоРесурсу(ТипБлокировки);
		
		// Установить параметры запроса выбора проблемных запросов по заданному ресурсу
		мЗапросыБлокировки.УстановитьПараметр("ИБ",              ИнформационнаяБаза);
		мЗапросыБлокировки.УстановитьПараметр("НачалоИнтервала", НачалоИнтервала);
		мЗапросыБлокировки.УстановитьПараметр("КонецИнтервала",  КонецИнтервала);
		мЗапросыБлокировки.УстановитьПараметр("ТипРесурса",      ТипРесурса);
		
	КонецЕсли;
		
	Если ТипБлокировки = Перечисления.ТипыБлокировок.Блокировка1СПредприятия Тогда
		
		Элементы.ЗапросыЗаблокированныйЗапрос.Доступность   = Ложь;
		Элементы.ЗапросыЗаблокированныйЗапрос.Видимость     = Ложь;
		
		Элементы.ЗапросыБлокирующийЗапрос.Доступность       = Ложь;
		Элементы.ЗапросыБлокирующийЗапрос.Видимость         = Ложь;
		
		Элементы.ЗапросыЗаблокированныйКонтекст.Доступность = Истина;
		Элементы.ЗапросыЗаблокированныйКонтекст.Видимость   = Истина;
		
		Элементы.ЗапросыБлокирующийКонтекст.Доступность     = Истина;
		Элементы.ЗапросыБлокирующийКонтекст.Видимость       = Истина;
		
	Иначе
		
		Элементы.ЗапросыЗаблокированныйЗапрос.Доступность   = Истина;
		Элементы.ЗапросыЗаблокированныйЗапрос.Видимость   = Истина;
		
		Элементы.ЗапросыБлокирующийЗапрос.Доступность       = Истина;
		Элементы.ЗапросыБлокирующийЗапрос.Видимость       = Истина;
		
		Элементы.ЗапросыЗаблокированныйКонтекст.Доступность = Ложь;
		Элементы.ЗапросыЗаблокированныйКонтекст.Видимость = Ложь;
		
		Элементы.ЗапросыБлокирующийКонтекст.Доступность     = Ложь;
		Элементы.ЗапросыБлокирующийКонтекст.Видимость     = Ложь;
		
	КонецЕсли;
	
	// Установить общие параметры запроса
	мЗапросыБлокировки.УстановитьПараметр("Ресурс",                  ЗаблокированныйРесурс);
	мЗапросыБлокировки.УстановитьПараметр("БлокирующийКонтекст",     БлокирующийКонтекст);
	мЗапросыБлокировки.УстановитьПараметр("ЗаблокированныйКонтекст", ЗаблокированныйКонтекст);
	
	// Заполнить таблицу
	ВключенаГруппировка = (СпособГруппировки <> "БезГруппировки");
	Если НЕ ВключенаГруппировка Тогда
		// Выгрузить список всех запросов
		Попытка
			ТаблицаЗапросы = мЗапросыБлокировки.Выполнить().Выгрузить();
		Исключение
			ЗаписьЖурналаРегистрации("Ошибка", УровеньЖурналаРегистрации.Ошибка,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
		ТаблицаЗапросы.Колонки.Добавить("ИндексКартинкиДата", Новый ОписаниеТипов("Число"));
		ТаблицаЗапросы.Колонки.Добавить("ИндексКартинкиВремя", Новый ОписаниеТипов("Число"));
		ТаблицаЗапросы.Колонки.Добавить("ИндексКартинкиЗаблокированныйЗапрос", Новый ОписаниеТипов("Число"));
		ТаблицаЗапросы.Колонки.Добавить("ИндексКартинкиБлокирующийЗапрос", Новый ОписаниеТипов("Число"));
		ЗаполнитьИндексыКартинокВТаблицеЗапросы(ТаблицаЗапросы, ВключенаГруппировка);
		ЗначениеВРеквизитФормы(ТаблицаЗапросы, "Запросы");
		
	Иначе
		
		// Выгрузить запросы и сгруппировать по типу запроса
		Запросы.Очистить();
		
		Выборка1 = мЗапросыБлокировки.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока Выборка1.Следующий() Цикл
			
			Выборка2 = Выборка1.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока Выборка2.Следующий() Цикл
				
				Стр = Запросы.Добавить();
				
				Стр.Вес = Выборка2.Вес;
				Стр.ВремяОжидания = Выборка2.ВремяОжидания;
				
				Выборка3 = Выборка2.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока Выборка3.Следующий() Цикл
					
					Стр.ЗаблокированноеВыполнение = Выборка3.ЗаблокированноеВыполнение;
					Стр.БлокирующееВыполнение     = Выборка3.БлокирующееВыполнение;
					
					Если ТипБлокировки = Перечисления.ТипыБлокировок.БлокировкаСУБД Тогда
						
						Стр.ЗаблокированныйЗапрос = Выборка3.ЗаблокированныйЗапрос;
						Стр.БлокирующийЗапрос     = Выборка3.БлокирующийЗапрос;
						
					Иначе
						
						Стр.ЗаблокированныйКонтекст = Выборка3.ЗаблокированныйКонтекст;
						Стр.БлокирующийКонтекст     = Выборка3.БлокирующийКонтекст;
						
					КонецЕсли;
					
					Стр.ЗаблокированаСостояние    = Выборка3.ЗаблокированаСостояние;
					Стр.БлокируетСостояние        = Выборка3.БлокируетСостояние;
					
					Прервать;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
		Запросы.Сортировать("ВремяОжидания УБЫВ");
		ТаблицаЗапросы = РеквизитФормыВЗначение("Запросы");
		ЗаполнитьИндексыКартинокВТаблицеЗапросы(ТаблицаЗапросы, ВключенаГруппировка);
		ЗначениеВРеквизитФормы(ТаблицаЗапросы, "Запросы");
		
	КонецЕсли;
	
	// Заполнить копию таблицы (используется при установке отбора)
	ВсеЗапросы = Новый ХранилищеЗначения(ТаблицаЗапросы.Скопировать());
	
	ФильтрЗапросы = Неопределено;
	
КонецПроцедуры // ЗаполнитьТаблицуЗапросов()

&НаСервереБезКонтекста
// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
Процедура ЗаполнитьИндексыКартинокВТаблицеЗапросы(Таблица, Различные)
	
	Для Каждого Строка Из Таблица Цикл
	
		// Установить картинку ячейки ДатаВремяОжидания
		Если НЕ Различные Тогда
			Строка.ИндексКартинкиДата = 0;
			Строка.ИндексКартинкиВремя = -1;
		Иначе
			Строка.ИндексКартинкиДата = -1;
			Строка.ИндексКартинкиВремя = 0;
		КонецЕсли;
		
		// Установить картинку ячейки ЗаблокированныйЗапрос
		Если Строка.ЗаблокированаСостояние = Перечисления.СостоянияБлокировок.Ожидание Тогда
			Строка.ИндексКартинкиЗаблокированныйЗапрос = 2;
		Иначе
			Строка.ИндексКартинкиЗаблокированныйЗапрос = 1;
		КонецЕсли;
		
		// Установить картинку ячейки БлокирующийЗапрос
		Если Строка.БлокируетСостояние = Перечисления.СостоянияБлокировок.Ожидание Тогда
			Строка.ИндексКартинкиБлокирующийЗапрос = 2;
		Иначе
			Строка.ИндексКартинкиБлокирующийЗапрос = 1;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьИндексыКартинокВТаблицеЗапросы()

&НаКлиенте
Процедура СпособГруппировкиПриИзменении(Элемент)
	
	ВключенаГруппировка = (СпособГруппировки <> "БезГруппировки");
	Элементы.ФункцияГруппировки.Доступность       = ВключенаГруппировка;
	Элементы.КонтекстыЗаблокированныйКонтекст.Высота = ?(СпособГруппировки = "Контекст", 3, 1);
	ЗаполнитьТаблицуКонтекстов();
	
КонецПроцедуры

&НаКлиенте
Процедура ФункцияГруппировкиПриИзменении(Элемент)
	
	ЗаполнитьТаблицуКонтекстов();
	
КонецПроцедуры

