
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновитьСписокИнформационныхБаз();
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ВЫБОРА ИНФОРМАЦИОННОЙ БАЗЫ

&НаСервере
// Процедура обновляет список информационных баз перечитывая его из базы
//
Процедура ОбновитьСписокИнформационныхБаз()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Наполнитель", Справочники.ИнформационныеБазы.Наполнитель);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ИнформационнаяБаза.Наименование КАК Наименование,
	               |	ИнформационнаяБаза.Ссылка КАК Ссылка,
	               |	ИнформационнаяБаза.СерверИБ + ""\"" + ИнформационнаяБаза.ИмяИБ КАК Описание
	               |ИЗ
	               |	Справочник.ИнформационныеБазы КАК ИнформационнаяБаза
	               |ГДЕ
	               |	ИнформационнаяБаза.Ссылка <> &Наполнитель
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Наименование";
	
	ИнформационныеБазы.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Если ТекущаяИБ <> Неопределено Тогда
		Отбор = Новый Структура("Ссылка", ТекущаяИБ);
		СтрокиТЧ = ИнформационныеБазы.НайтиСтроки(Отбор);
		Если СтрокиТЧ.Количество() > 0 Тогда
			ВыбраннаяСтрока = СтрокиТЧ[0];
			Элементы.ИнформационныеБазы.ТекущаяСтрока = ВыбраннаяСтрока.ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
	
	УстановитьДоступностьЭлементовУправленияИБ();
	
КонецПроцедуры // ОбновитьСписокИнформационныхБаз()

&НаКлиенте
// Процедура обрабатывает выбор (двойной щелчок) информационной базы
//
Процедура ВыбратьИБ(Команда)
	
	ВыбратьИЗакрыть();
	
КонецПроцедуры // ВыбратьИБ()

&НаКлиенте
// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
Процедура ВыбратьИЗакрыть()
	
	СтандартнаяОбработка = Ложь;
	ИБ = Элементы.ИнформационныеБазы.ТекущиеДанные.Ссылка;
	
	Если Контекст.Сценарий() = ПредопределенноеЗначение("Справочник.Сценарии.Мониторинг") Тогда
		НастройкиАктуальны = ПроверитьНастройкиИБНаСервере(ИБ);
		Если Не НастройкиАктуальны Тогда
			ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьИЗакрытьЗавершение", ЭтотОбъект, ИБ);
			ТекстПредупреждения = 
				"Необходимо обновить настройки подключения с помощью мастера настроек.
				|Для этого откройте мастер настройки и нажмите кнопку ""Проверить все"".
				|
				|Запустить мастер настройки сейчас?";
			ПоказатьВопрос(ОписаниеОповещения, ТекстПредупреждения, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
		КонецЕсли;
	Иначе
		НастройкиАктуальны = Истина;
	КонецЕсли;
	
	Если НастройкиАктуальны Тогда
		Закрыть(ИБ);
	КонецЕсли;
	
КонецПроцедуры // ОбработатьВыбор()

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаКлиенте
Процедура ВыбратьИЗакрытьЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("Ключ", ДополнительныеПараметры);
	ОткрытьФорму("Справочник.ИнформационныеБазы.Форма.ФормаНастройки", ПараметрыФормы,
		,,,,,РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры // ВыбратьИЗакрытьЗавершение()

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаСервереБезКонтекста
Функция ПроверитьНастройкиИБНаСервере(ИБ)
	
	Если Не ЗначениеЗаполнено(ИБ.ВерсияНастроек) Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции // ПроверитьНастройкиИБНаСервере()

&НаКлиенте
// Процедура создает описание подключения к новой информационной базе
//
Процедура ДобавитьИБ(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ДобавитьИБЗавершение", ЭтотОбъект);
	ОткрытьФорму("Справочник.ИнформационныеБазы.ФормаОбъекта",, ЭтотОбъект,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаКлиенте
Процедура ДобавитьИБЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ТекущаяИБ = Результат;
	КонецЕсли;
	
	ОбновитьСписокИнформационныхБаз();
	
КонецПроцедуры // ДобавитьИБЗавершение()

&НаКлиенте
// Процедура изменяет параметры выбранного подключения к информационной
// базе
Процедура ИзменитьИБ(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ИзменитьИБЗавершение", ЭтотОбъект);
	ПараметрыФормы = Новый Структура("Ключ", Элементы.ИнформационныеБазы.ТекущиеДанные.Ссылка);
	ОткрытьФорму("Справочник.ИнформационныеБазы.ФормаОбъекта", ПараметрыФормы, 
		ЭтотОбъект,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьИБЗавершение(Параметры, ДополнительныеПараметры) Экспорт
	
	ОбновитьСписокИнформационныхБаз();
	
КонецПроцедуры

&НаКлиенте
// Процедура удаляет выбранное описание подключения к информационной базе
//
Процедура УдалитьИнформационнуюБазу(Элемент)
	
	Перем НачалоИнтервала;
	Перем КонецИнтервала;
	
	Если Элементы.ИнформационныеБазы.ТекущиеДанные <> Неопределено Тогда
		ПараметрыОповещения = 
			Новый Структура("КонецИнтервала, НачалоИнтервала", КонецИнтервала, НачалоИнтервала);
			
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"УдалитьИнформационнуюБазуПродолжение",
			ЭтотОбъект,
			ПараметрыОповещения);
			
		ПоказатьВопрос(ОписаниеОповещения,
		            "Удалить информационную базу """
		                + Элементы.ИнформационныеБазы.ТекущиеДанные.Наименование 
		                + """ из списка и все связанные с ней данные анализа?",
		            РежимДиалогаВопрос.ДаНет,,
		            КодВозвратаДиалога.Нет,
		            "Монитор производительности");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьИнформационнуюБазуПродолжение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	КонецИнтервала = ДополнительныеПараметры.КонецИнтервала;
	НачалоИнтервала = ДополнительныеПараметры.НачалоИнтервала;
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		ИБ = Элементы.ИнформационныеБазы.ТекущиеДанные.Ссылка;
		ИнформационнаяБаза.ОпределитьИнтервал(ИБ, НачалоИнтервала, КонецИнтервала);
		
		Если НачалоИнтервала <> Неопределено И КонецИнтервала <> Неопределено Тогда
			
			ПараметрыФормы = Новый Структура();
			ПараметрыФормы.Вставить("ИнформационнаяБаза", ИБ);
			ПараметрыФормы.Вставить("НачалоИнтервала", НачалоИнтервала);
			ПараметрыФормы.Вставить("КонецИнтервала", КонецИнтервала);
			ПараметрыФормы.Вставить("Автоматически", Истина);
			ПараметрыФормы.Вставить("УдалятьИБ", Истина);
			
			ОписаниеОповещения = Новый ОписаниеОповещения("УдалитьИнформационнуюБазуЗавершение", ЭтотОбъект);
			ОткрытьФорму("ОбщаяФорма.Удаление", ПараметрыФормы, ЭтотОбъект,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // УдалитьИнформационнуюБазу()

&НаКлиенте
// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
Процедура УдалитьИнформационнуюБазуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ОбновитьСписокИнформационныхБаз();
	
КонецПроцедуры // УдалитьИнформационнуюБазуЗавершение()

&НаКлиенте
// Процедура отображает описание информационной базы при ее выборе
//
Процедура ИнформационныеБазыПриАктивизацииСтроки(Элемент)
	
	Если Элементы.ИнформационныеБазы.ТекущиеДанные <> Неопределено Тогда
		ОписаниеИБ = Элементы.ИнформационныеБазы.ТекущиеДанные.Описание;
		ТекущаяИБ = Элементы.ИнформационныеБазы.ТекущиеДанные.Ссылка;
	КонецЕсли;
	
КонецПроцедуры // ИнформационныеБазыПриАктивизацииСтроки()

&НаСервере
// Процедура устанавливает доступность элементов управления на странице "ВыборИБ"
//
Процедура УстановитьДоступностьЭлементовУправленияИБ()
	
	ИБВыбрана = ИнформационныеБазы.Количество() > 0;
	
	Элементы.ВыбратьИБ.Доступность = ИБВыбрана;
	Элементы.ИзменитьИБ.Доступность = ИБВыбрана;
	Элементы.УдалитьИБ.Доступность = ИБВыбрана;
	
КонецПроцедуры // УстановитьДоступностьЭлементовУправленияИБ()

&НаКлиенте
Процедура ИнформационныеБазыНаименованиеПриИзменении(Элемент)
	
	ИБСсылка = Элементы.ИнформационныеБазы.ТекущиеДанные.Ссылка;
	НовоеНаименование = Элементы.ИнформационныеБазы.ТекущиеДанные.Наименование;
	ИнформационныеБазыНаименованиеПриИзмененииНаСервере(ИБСсылка, НовоеНаименование);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ИнформационныеБазыНаименованиеПриИзмененииНаСервере(ИБ, НовоеНаименование)
	
	Справочники.ИнформационныеБазы.ПереименоватьИБ(ИБ, НовоеНаименование);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ОбновитьСписокИнформационныхБаз();
	
КонецПроцедуры

&НаКлиенте
Процедура ИнформационныеБазыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ВыбратьИЗакрыть();
	
КонецПроцедуры



