
///////////////////////////////////////////////////////////////////////////////
// СТАНДАРТНЫЕ ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Инициализация реквизитов формы
	ИБ                          = Параметры.ИБ;
	Исключения                  = Параметры.Исключения;
	ПросмотрВключен             = Параметры.ПросмотрВключен;
	РежимУправленияБлокировками = ИБ.РежимУправленияБлокировкойДанных;
	ТипСУБД                     = ИБ.ТипСУБД;
	ТипОС                       = ИБ.ТипОССервераСУБД;
	КодВерсииСУБД               = ИБ.КодВерсииСУБД;
	
	// Заполнение показателей производительности
	ЗаполнитьПоказатели(Исключения, Неопределено);
	ОбновитьСостояниеЭлементовУправления();
	
КонецПроцедуры

&НаКлиенте
Процедура ОсновныеПоказателиПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		// Определение типа выбранного показателя производительности
		ВыбранныйЭлемент = Элемент.ТекущиеДанные.Ссылка;
		ЭтоГруппа = Элемент.ТекущиеДанные.ЭтоГруппа;
		
		// Запоминание текущего показателя производ
		Если Не ЭтоГруппа Тогда
			Показатель = ВыбранныйЭлемент;
		КонецЕсли;
		
		// Установка доступности кнопки Далее
		Элементы.ФормаКомандаOK.Доступность = Не ЭтоГруппа;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОсновныеПоказателиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ВыбратьПоказатель();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаOK(Команда)
	
	ВыбратьПоказатель();
	
КонецПроцедуры

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаКлиенте
Процедура ВыбратьПоказатель()
	
	Если Элементы.ОсновныеПоказатели.ТекущиеДанные <> Неопределено
		И Элементы.ОсновныеПоказатели.ТекущиеДанные.Уровень > 0 Тогда
		
		Если Элементы.ОсновныеПоказатели.ВыделенныеСтроки.Количество() > 1 Тогда
			Показатели = Новый Массив;
			Для Каждого ТекСтр Из Элементы.ОсновныеПоказатели.ВыделенныеСтроки Цикл
				СтрокаДерева = ОсновныеПоказатели.НайтиПоИдентификатору(ТекСтр);
				Если СтрокаДерева.Уровень > 0 Тогда
					Показатели.Добавить(СтрокаДерева.Ссылка);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Результат = Новый Структура("Показатель,Показатели,НастроитьПоказатель",
			Элементы.ОсновныеПоказатели.ТекущиеДанные.Ссылка,
			Показатели,
			НастроитьПоказательПроизводительности
		);
		Закрыть(Результат);
	КонецЕсли;
	
КонецПроцедуры // ВыбратьПоказатель()


///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Процедура ОбновитьСтрокиДерева(СтрокиДерева, Уровень)
	
	Для Каждого ТекСтрока Из СтрокиДерева Цикл
		ТекСтрока.Уровень = Уровень;
		Если ТекСтрока.Строки.Количество() > 0 Тогда
			ОбновитьСтрокиДерева(ТекСтрока.Строки, Уровень+1);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
// Процедура получает показатели указанного типа и размещает их на форме
//
// Параметры:
//  Показатели - ДеревоЗначений, источник данных для показателей 
//               производительности
//  Тип - СправочникСсылка, тип получаемых показателей
//        производительности. Это группа справочника 
//        ПоказателиПроизводительности в которой содержатся необходимые
//        показатели производительности
//
Процедура ЗаполнитьПоказатели(Исключения, Тип)
	
	Показатели = ОбщегоНазначения.ПолучитьИерархиюПоказателей(ИБ, Тип, Исключения, ТипСУБД, КодВерсииСУБД, ТипОС, РежимУправленияБлокировками);
	Показатели.Колонки.Добавить("Использовать");
	Показатели.Колонки.Добавить("Уровень");
	ОбновитьСтрокиДерева(Показатели.Строки, 0);
	
	ЗначениеВРеквизитФормы(Показатели, "ОсновныеПоказатели");
	
КонецПроцедуры // ЗаполнитьПоказатели()

&НаСервере
Процедура ОбновитьСостояниеЭлементовУправления()
	
	Элементы.ФормаКомандаOK.Доступность = Элементы.ОсновныеПоказатели.ТекущаяСтрока <> Неопределено;
	
КонецПроцедуры // ОбновитьСостояниеЭлементовУправления()

