////////////////////////////////////////////////////////////////////////////////
// Интеграция подсистем библиотеки друг с другом.
// Здесь размещена обработка программных событий, возникающих в подсистемах-источниках,
// в тех случаях, когда подсистем-приемников более одной или их список заранее неизвестен.
//

#Область СлужебныйПрограммныйИнтерфейс

#Область БазоваяФункциональность

// См. ОбщегоНазначенияКлиентПереопределяемый.ПередНачаломРаботыСистемы.
Процедура ПередНачаломРаботыСистемы(Параметры) Экспорт
	
	// Начало замера времени запуска программы.
	МодульОценкаПроизводительностиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ОценкаПроизводительностиКлиент");
	Параметры.Модули.Добавить(МодульОценкаПроизводительностиКлиент);
	
	// Проверка блокировки информационной базы для обновления.
	Параметры.Модули.Добавить(ОбновлениеИнформационнойБазыКлиент);
	
	// Проверка минимально допустимой версии платформы для запуска.
	Параметры.Модули.Добавить(Новый Структура("Модуль, Номер", СлужебныйКлиент, 2));
	
	// Проверка статуса обработчиков отложенного обновления.
	Параметры.Модули.Добавить(Новый Структура("Модуль, Номер", ОбновлениеИнформационнойБазыКлиент, 2));
	
	// Загрузка/обновление параметров работы программы.
	Параметры.Модули.Добавить(Новый Структура("Модуль, Номер", ОбновлениеИнформационнойБазыКлиент, 3));
	
	// Обновление информационной базы.
	Параметры.Модули.Добавить(Новый Структура("Модуль, Номер", ОбновлениеИнформационнойБазыКлиент, 4));
	
	// Обработка ключа запуска ВыполнитьОбновлениеИЗавершитьРаботу.
	Параметры.Модули.Добавить(Новый Структура("Модуль, Номер", ОбновлениеИнформационнойБазыКлиент, 5));
	
КонецПроцедуры

// См. ОбщегоНазначенияКлиентПереопределяемый.ПриНачалеРаботыСистемы.
Процедура ПриНачалеРаботыСистемы(Параметры) Экспорт
	
	// Открытие описания изменений системы.
	МодульОбновлениеИнформационнойБазыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ОбновлениеИнформационнойБазыКлиент");
	Параметры.Модули.Добавить(МодульОбновлениеИнформационнойБазыКлиент);
	
	// Инициализация подсистем ЦУП
	МодульЦУПКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ЦУПКлиент");
	Параметры.Модули.Добавить(МодульЦУПКлиент);
	
	//Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ЦентрМониторинга") Тогда
	//    МодульЦентрМониторингаКлиентСлужебный = ОбщегоНазначенияКлиент.ОбщийМодуль("ЦентрМониторингаКлиентСлужебный");
	//    Параметры.Модули.Добавить(МодульЦентрМониторингаКлиентСлужебный);
	//КонецЕсли;
	
КонецПроцедуры

// См. ОбщегоНазначенияКлиентПереопределяемый.ПослеНачалаРаботыСистемы.
Процедура ПослеНачалаРаботыСистемы() Экспорт
	
	//СлужебныйКлиент.ПослеНачалаРаботыСистемы();
	
	МодульИнформацияПриЗапускеКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ИнформацияПриЗапускеКлиент");
	МодульИнформацияПриЗапускеКлиент.ПослеНачалаРаботыСистемы();
	
	ОбновлениеИнформационнойБазыКлиент.ПослеНачалаРаботыСистемы();
	
КонецПроцедуры

// См. ОбщегоНазначенияКлиентПереопределяемый.ПередЗавершениемРаботыСистемы.
Процедура ПередЗавершениемРаботыСистемы(Отказ, Предупреждения) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
