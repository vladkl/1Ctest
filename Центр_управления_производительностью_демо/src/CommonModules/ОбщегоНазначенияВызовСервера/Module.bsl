
Функция ПолучитьСиноним() Экспорт
	
	Возврат Метаданные.Синоним;
	
КонецФункции

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ВключенУправляемыйРежимБлокировок(ИБ) Экспорт
	
	Результат = ИБ.РежимУправленияБлокировкойДанных <> Перечисления.РежимыУправленияБлокировкойДанных.Автоматический;
	
	Возврат Результат;
	
КонецФункции // ВключенУправляемыйРежимБлокировок()

#Область ПрограммныйИнтерфейс

// Возвращает структуру параметров, необходимых для работы клиентского кода
// при запуске конфигурации, т.е. в обработчиках событий.
// - ПередНачаломРаботыСистемы,
// - ПриНачалеРаботыСистемы.
//
Функция ДобавитьПараметрыРаботыКлиентаПриЗапуске(Параметры) Экспорт
	
	ЭтоВызовПередНачаломРаботыСистемы = Параметры.ПолученныеПараметрыКлиента <> Неопределено;
	Если Не ОбновлениеИнформационнойБазыСлужебный.ДобавитьПараметрыРаботыКлиентаПриЗапуске(Параметры)
	   И ЭтоВызовПередНачаломРаботыСистемы Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ОбщегоНазначения.ДобавитьПараметрыРаботыКлиента(Параметры);
	
КонецФункции

Процедура ЗаписатьВЖурнал(ТекстСообщения, ПредставлениеУровняЗаписи, ПодробноеОписание) Экспорт
	
	ЗаписьЖурналаРегистрации(
		ТекстСообщения,
		УровеньЖурналаРегистрации[ПредставлениеУровняЗаписи],,,
		ПодробноеОписание);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Сохранение, чтение и удаление настроек из хранилищ.

// См. ОбщегоНазначения.ХранилищеОбщихНастроекСохранить.
Процедура ХранилищеОбщихНастроекСохранить(КлючОбъекта, КлючНастроек, Настройки,
			ОписаниеНастроек = Неопределено,
			ИмяПользователя = Неопределено,
			ОбновитьПовторноИспользуемыеЗначения = Ложь) Экспорт
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
		КлючОбъекта,
		КлючНастроек,
		Настройки,
		ОписаниеНастроек,
		ИмяПользователя);
		
КонецПроцедуры

// См. ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить.
Функция ХранилищеОбщихНастроекЗагрузить(КлючОбъекта, КлючНастроек, ЗначениеПоУмолчанию = Неопределено,
			ОписаниеНастроек = Неопределено,
			ИмяПользователя = Неопределено) Экспорт
	
	Возврат ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		КлючОбъекта,
		КлючНастроек,
		ЗначениеПоУмолчанию,
		ОписаниеНастроек,
		ИмяПользователя);
		
КонецФункции

#КонецОбласти

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучитьМакетОформленияHTML() Экспорт
	
	МакетСтиля = ПолучитьОбщийМакет(Метаданные.ОбщиеМакеты.СтильWebСтраниц);
	
	Возврат МакетСтиля;
	
КонецФункции // ПолучитьМакетОформленияHTML()

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучитьМасштабПоУмолчанию() Экспорт
	
	Возврат Константы.МасштабПоУмолчанию.Получить();
	
КонецФункции // ПолучитьМасштабПоУмолчанию()

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
Процедура СохранитьЖурнал(Журнал) Экспорт
	
	Для Каждого ТекСобытие Из Журнал Цикл
		ЗаписьЖурналаРегистрации(
			ТекСобытие.ТекстСообщения,
			УровеньЖурналаРегистрации[ТекСобытие.УровеньСобытия],,,
			ТекСобытие.ПодробноеОписание);
	КонецЦикла;
	
КонецПроцедуры // ЗаписатьЖурнал()