///////////////////////////////////////////////////////////////////////////////
// СОВМЕСТИМОСТЬ БЛОКИРОВОК

// Создать таблицу совместимости блокировок
//
// Возвращаемое значение:
//  ТаблицаЗначений - таблица совместимости блокировок
//
Функция СоздатьТаблицуСовместимостиБлокировок() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СовместимостьБлокировок.ТипСУБД,
	               |	СовместимостьБлокировок.УстановленнаяБлокировка,
	               |	СовместимостьБлокировок.УстанавливаемаяБлокировка,
	               |	СовместимостьБлокировок.Совместимость
	               |ИЗ
	               |	РегистрСведений.СовместимостьБлокировок КАК СовместимостьБлокировок";
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции // СоздатьКэшСовместимостиБлокировок()

// Определить совместимость блокировок
//
// Параметры:
//  ТипСУБД - Перечисление.ТипСУБД
//  УстановленнаяБлокировка - Перечисление.РежимБлокировки
//  УстанавливаемаяБлокировка - Перечисление.РежимБлокировки
//
// Возвращаемое значение:
//  Перечисление.ВидыСовместимостиБлокировок - совместимость блокировок
//
Функция БлокировкиСовместимы(ТаблицаСовместимостиБлокировок, ТипСУБД, УстановленнаяБлокировка, УстанавливаемаяБлокировка) Экспорт
	
	ПараметрыПоиска = Новый Структура;
	ПараметрыПоиска.Вставить("ТипСУБД", ТипСУБД);
	ПараметрыПоиска.Вставить("УстановленнаяБлокировка", УстановленнаяБлокировка);
	ПараметрыПоиска.Вставить("УстанавливаемаяБлокировка", УстанавливаемаяБлокировка);
	
	РезультатПоиска = Служебный.ТаблицаСовместимостиБлокировок(ТаблицаСовместимостиБлокировок).НайтиСтроки(ПараметрыПоиска);
	
	Возврат РезультатПоиска[0].Совместимость;
	
КонецФункции // БлокировкиСовместимы()


///////////////////////////////////////////////////////////////////////////////
// ИНФОРМАЦИЯ О СУБД

// Получить тип СУБД по строковому представлению
//
// Параметры:
//  СтрокаТипаСУБД - Строка
//
// Возвращаемое значение:
//  Перечисление.ТипСУБД
//
Функция ПолучитьТипСУБД(СтрокаТипаСУБД) Экспорт
	
	Если СтрокаТипаСУБД = "MSSQLServer" Тогда
		Возврат Перечисления.ТипыСУБД.MSSQLServer;
		
	ИначеЕсли СтрокаТипаСУБД = "IBMDB2" Тогда
		Возврат Перечисления.ТипыСУБД.IBMDB2;
		
	ИначеЕсли СтрокаТипаСУБД = "PostgreSQL" Тогда
		Возврат Перечисления.ТипыСУБД.PostgreSQL;
		
	ИначеЕсли СтрокаТипаСУБД = "OracleDatabase" Тогда
		Возврат Перечисления.ТипыСУБД.Oracle;
		
	ИначеЕсли СтрокаТипаСУБД = "DBV8DBEng" Тогда
		Возврат Перечисления.ТипыСУБД.DBV8DBEng;
		
	КонецЕсли;
	
КонецФункции // ПолучитьТипСУБД()

// Получить версию СУБД
//
// Возвращаемое значение:
//  Число - версия СУБД
//
Функция ПолучитьВерсиюСУБД(ТипСУБД, СерверСУБД) Экспорт
	
	Если ТипСУБД = Перечисления.ТипыСУБД.MSSQLServer Тогда
		Возврат MSSQL.Версия(СерверСУБД);
	ИначеЕсли ТипСУБД = Перечисления.ТипыСУБД.IBMDB2 Тогда
		Возврат IBMDB2.Версия();
	ИначеЕсли ТипСУБД = Перечисления.ТипыСУБД.PostgreSQL Тогда
		Возврат PostgreSQL.Версия();
	ИначеЕсли ТипСУБД = Перечисления.ТипыСУБД.Oracle Тогда
		Возврат Oracle.Версия();
	КонецЕсли;
	
КонецФункции // ПолучитьВерсиюСУБД()

// Получить режим блокировки из строкового представления для указанного типа СУБД
//
// Параметры:
//  ТипСУБД - Перечисление.ТипСУБД
//  СтроковоеПредставление - Строка, режим блокировки в виде строки
//
// Возвращаемое значение:
//  Перечисления.Режимлокировки - режим блокировки в виде перечисления
//
Функция ПолучитьРежимБлокировки(ТипСУБД, СтроковоеПредставление) Экспорт
	
	Если ТипСУБД = Перечисления.ТипыСУБД.MSSQLServer Тогда
		Возврат MSSQL.ПолучитьРежимБлокировки(СтроковоеПредставление);
	ИначеЕсли ТипСУБД = Перечисления.ТипыСУБД.DBV8DBEng Тогда
		Возврат АнализБлокировок1С.ПолучитьРежимБлокировки(СтроковоеПредставление);
	КонецЕсли;
	
КонецФункции // ПолучитьРежимБлокировки()

// Получить вид совместимости блокировки по строковому представлению
//
// Параметры:
//  СтроковоеПредставление - Строка, вид совместимости блокировки в виде строки
//
// Возвращаемое значение:
//  Перечисления.ВидСовместимостиБлокировки
//
Функция ПолучитьВидСовместимостиБлокировки(СтроковоеПредставление) Экспорт
	
	Если СтроковоеПредставление = "NoConflict" Тогда
		Возврат Перечисления.ВидыСовместимостиБлокировок.Совместима;
	ИначеЕсли СтроковоеПредставление = "Conflict" Тогда
		Возврат Перечисления.ВидыСовместимостиБлокировок.Несовместима;
	ИначеЕсли СтроковоеПредставление = "Illegal" Тогда
		Возврат Перечисления.ВидыСовместимостиБлокировок.НедопустимоеСочетание;
	Иначе
		Возврат Перечисления.ВидыСовместимостиБлокировок.Неизвестно;
	КонецЕсли;
	
КонецФункции // ПолучитьВидСовместимостиБлокировки()

// Получить перевод строки
//
// Параметры:
//  ТипСУБД - Перечисление.ТипСУБД
//
// Возвращаемое значение:
//  Строка - символы перевода строки
//
Функция ПолучитьПереводСтроки(ТипСУБД) Экспорт
	
	Если ТипСУБД = Перечисления.ТипыСУБД.MSSQLServer Тогда
		Возврат Символы.ПС;
	ИначеЕсли ТипСУБД = Перечисления.ТипыСУБД.IBMDB2 Тогда
		Возврат Символы.ВК;
	ИначеЕсли ТипСУБД = Перечисления.ТипыСУБД.PostgreSQL Тогда
		Возврат Символы.ВК;
	КонецЕсли;
	
КонецФункции // ПолучитьПереводСтроки()
