///////////////////////////////////////////////////////////////////////////////
// СРАВНЕНИЕ ПАРАМЕТРОВ СОБЫТИЙ

// Сравнить параметры события
//
// Параметры:
//  Событие - СправочникСсылка.Событие, событие, параметры которого сравниваются
//  ПараметрСценария - Произвольный, тип этих параметров должен равняться типу ПараметрСобытия
//  ПараметрСобытия - Произвольный, аналогично ПараметрСценария
//
// Возвращаемое значение:
//  Булево - Истина, параметры равны; Ложь - не равны
//
Функция СравнитьПараметрыСобытия(Событие, ПараметрСценария, ПараметрСобытия) Экспорт
	
	Перем Результат;
	
	КодСобытия = СобытияВызовСервера.ПолучитьКодСобытия(Событие);
	
	Выполнить "Результат = СравнитьПараметрыСобытия" + КодСобытия + "(ПараметрСценария, ПараметрСобытия);";
	
	Возврат Результат;
	
КонецФункции // СравнитьПараметрыСобытия()

// Сравнить параметры события начала работы
//
// Параметры:
//  ПараметрСценария, ПараметрСобытия - Произвольный, сравниваемые параметры одго типа
//
// Возвращаемое значение:
//  Булево - Истина, параметры равны; Ложь - не равны
//
Функция СравнитьПараметрыСобытияНачалоРаботы(ПараметрСценария, ПараметрСобытия)
	
	Возврат ПараметрСценария = ПараметрСобытия;
	
КонецФункции // СравнитьПараметрыСобытияНачалоРаботы()

// Сравнить параметры события перехода значения показателя в другую зону
//
// Параметры:
//  ПараметрСценария, ПараметрСобытия - Произвольный, сравниваемые параметры одго типа
//
// Возвращаемое значение:
//  Булево - Истина, параметры равны; Ложь - не равны
//
Функция СравнитьПараметрыСобытияПереходПоказателяВЗону(ПараметрСценария, ПараметрСобытия)
	
	Если ПараметрСценария = Неопределено Или ПараметрСобытия = Неопределено
	 Или ПараметрСценария.Зона <> ПараметрСобытия.Зона
	 Или ПараметрСценария.Длительность <> ПараметрСобытия.Длительность
	 Или ПараметрСценария.Повтор <> ПараметрСобытия.Повтор Тогда
		
		Возврат Ложь;
	КонецЕсли;
	
	КоличествоСовпадений = 0;
	
	Для Каждого Показатель Из ПараметрСценария.Показатели Цикл
		Если ПараметрСобытия.Показатели.Найти(Показатель) <> Неопределено Тогда
			Если Не ПараметрСценария.Все Тогда
				Возврат Истина;
			Иначе
				КоличествоСовпадений = КоличествоСовпадений + 1;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ПараметрСценария.Показатели.Количество() = КоличествоСовпадений;
	
КонецФункции // СравнитьПараметрыСобытияПереходПоказателяВЗону()

// Сравнить параметры события возникновения ошибки при выполнении сценария
//
// Параметры:
//  ПараметрСценария, ПараметрСобытия - Произвольный, сравниваемые параметры одго типа
//
// Возвращаемое значение:
//  Булево - Истина, параметры равны; Ложь - не равны
//
Функция СравнитьПараметрыСобытияОшибка(ПараметрСценария, ПараметрСобытия)
	
	Возврат ПараметрСценария = ПараметрСобытия;
	
КонецФункции // СравнитьПараметрыСобытияОшибка()

// Сравнить параметры события выключения записи показателя
//
// Параметры:
//  ПараметрСценария, ПараметрСобытия - Произвольный, сравниваемые параметры одго типа
//
// Возвращаемое значение:
//  Булево - Истина, параметры равны; Ложь - не равны
//
Функция СравнитьПараметрыСобытияЗаписьПоказателяВыключена(ПараметрСценария, ПараметрСобытия)
	
	Если ПараметрСценария = Неопределено Или ПараметрСобытия = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	КоличествоСовпадений = 0;
	
	Для Каждого Показатель Из ПараметрСценария.Показатели Цикл
		Если ПараметрСобытия.Показатели.Найти(Показатель) <> Неопределено Тогда
			Если Не ПараметрСценария.Все Тогда
				Возврат Истина;
			Иначе
				КоличествоСовпадений = КоличествоСовпадений + 1;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ПараметрСценария.Показатели.Количество() = КоличествоСовпадений;
	
КонецФункции // СравнитьПараметрыСобытияЗаписьПоказателяВыключена()


///////////////////////////////////////////////////////////////////////////////
// ПРЕДСТАВЛЕНИЯ СОБЫТИЙ И ИХ ПАРАМЕТРОВ

// Получение представления события
//
//  Событие - СправочникСсылка.Событие
//  ПараметрСобытия - Произвольный, аналогично ПараметрСценария
//
// Возвращаемое значение:
//  Строка - представление события
//
Функция ПредставлениеПараметровСобытия(Событие, ПараметрСобытия) Экспорт
	
	Перем Результат;
	
	Попытка
		Если ПараметрСобытия <> Неопределено Тогда
			КодСобытия = СобытияВызовСервера.ПолучитьКодСобытия(Событие);
			Выполнить "Результат = ПредставлениеПараметровСобытия" + КодСобытия + "(Событие, ПараметрСобытия);";
		Иначе
			Результат = "";
		КонецЕсли;
	Исключение
		Результат = Строка(ПараметрСобытия);
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции // ПредставлениеПараметровСобытия()

// Получение представления параметрво события "Переход показателя в зону"
//
//  Событие - СправочникСсылка.Событие, событие, параметры которого сравниваются
//  ПараметрСобытия - Произвольный, аналогично ПараметрСценария
//
// Возвращаемое значение:
//  Строка - представление события
//
Функция ПредставлениеПараметровСобытияПереходПоказателяВЗону(Событие, ПараметрСобытия)
	
	Возврат
		Строка(ПараметрСобытия.Зона) + " (" +
		ПараметрСобытия.Длительность + "; " + 
		?(ПараметрСобытия.Повтор >= 0, ПараметрСобытия.Повтор, "-") +  ")";
	
КонецФункции // ПредставлениеПараметровСобытияПереходПоказателяВЗону()

// Получение представления параметров события "Запись показателя выключена"
//
//  Событие - СправочникСсылка.Событие, событие, параметры которого сравниваются
//  ПараметрСобытия - Произвольный, аналогично ПараметрСценария
//
// Возвращаемое значение:
//  Строка - представление события
//
Функция ПредставлениеПараметровСобытияЗаписьПоказателяВыключена(Событие, ПараметрСобытия)
	
	Показатели = "";
	
	Для Каждого Показатель Из ПараметрСобытия.Показатели Цикл
		Если Не ПустаяСтрока(Показатели) Тогда
			Показатели = Показатели + ", ";
		КонецЕсли;
		
		Показатели = Показатели + Показатель;
	КонецЦикла;
	
	Возврат Показатели;
	
КонецФункции // ПредставлениеПараметровСобытияЗаписьПоказателяВыключена()

// Получение представления параметров события "Ошибка"
//
//  Событие - СправочникСсылка.Событие, событие, параметры которого сравниваются
//  ПараметрСобытия - Произвольный, аналогично ПараметрСценария
//
// Возвращаемое значение:
//  Строка - представление события
//
Функция ПредставлениеПараметровСобытияОшибка(Событие, ПараметрСобытия)
	
	Показатели = "";
	
	Возврат Показатели;
	
КонецФункции // ПредставлениеПараметровСобытияЗаписьПоказателяВыключена()


// ВСПОМОГАТЕЛЬНЫЕ

// Служебная процедура, необходимая для корректного прохождения
// проверки "Поиск неиспользуемых процедур и функций"
//
// Параметры:
//  Нет
//
Процедура ВызовыНеявноИспользуемыхПроцедурИФункций()
	
	Если Ложь Тогда
		
		СравнитьПараметрыСобытияНачалоРаботы(Неопределено, Неопределено);
		СравнитьПараметрыСобытияПереходПоказателяВЗону(Неопределено, Неопределено);
		СравнитьПараметрыСобытияОшибка(Неопределено, Неопределено);
		СравнитьПараметрыСобытияЗаписьПоказателяВыключена(Неопределено, Неопределено);
		
		ПредставлениеПараметровСобытияПереходПоказателяВЗону(Неопределено, Неопределено);
		ПредставлениеПараметровСобытияЗаписьПоказателяВыключена(Неопределено, Неопределено);
		ПредставлениеПараметровСобытияОшибка(Неопределено, Неопределено);
		
		ВызовыНеявноИспользуемыхПроцедурИФункций();
		
	КонецЕсли;
	
КонецПроцедуры // ВызовыНеявноИспользуемыхПроцедурИФункций()
