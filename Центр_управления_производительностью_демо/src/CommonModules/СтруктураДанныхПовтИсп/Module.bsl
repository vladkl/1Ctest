
///////////////////////////////////////////////////////////////////////////////
// ПОЛЬЗОВАТЕЛЬ ИНФОРМАЦИОННОЙ БАЗЫ

// Получить ссылку на справочник пользователя ИБ с указанными параметрами
// Если такого пользователя в базе еще нет, он будет создан и помещен в базу
//
// Параметры:
//  ИмяПользователя - Строка, имя пользователя
//  Компьютер - Строка, имя компьютера на котором работал пользователь
//  ИБ - СправочникСсылка.ИнформационнаяБаза, владелец контекста
//
// Возвращаемое значение:
//  СправочникСсылка.ПользовательИБ - полученный пользователь
//
Функция ПолучитьПользователяИБ(ИмяПользователя, Компьютер, ИБ) Экспорт
	
	ПользовательИБ = НайтиПользователяИБ(ИмяПользователя, Компьютер, ИБ);
	
	Если ПользовательИБ = Неопределено Тогда
		ПользовательИБ = СоздатьПользователяИБ(ИмяПользователя, Компьютер, ИБ);
	КонецЕсли;
	
	Возврат ПользовательИБ;
	
КонецФункции // ПолучитьПользователяИБ()

// Найти ссылку на справочник пользователя ИБ с указанными параметрами
//
// Параметры:
//  ИмяПользователя - Строка, имя пользователя
//  Компьютер - Строка, имя компьютера на котором работал пользователь
//  ИБ - СправочникСсылка.ИнформационнаяБаза, владелец контекста
//
// Возвращаемое значение:
//  СправочникСсылка.ПользовательИБ - найденый пользователь
//
Функция НайтиПользователяИБ(ИмяПользователя, Компьютер, ИБ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИБ",              ИБ);
	Запрос.УстановитьПараметр("Компьютер",       Компьютер);
	Запрос.УстановитьПараметр("ИмяПользователя", ИмяПользователя);
	Запрос.Текст = "
		|ВЫБРАТЬ
		|	ПользовательИБ.Ссылка
		|ИЗ
		|	Справочник.ПользователиИБ КАК ПользовательИБ
		|ГДЕ
		|	НЕ ПользовательИБ.ПометкаУдаления
		|	И ПользовательИБ.Владелец = &ИБ
		|	И ПользовательИБ.Компьютер = &Компьютер
		|	И ПользовательИБ.ИмяПользователя = &ИмяПользователя";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции // НайтиПользователяИБ()

// Создать справочник пользователя ИБ с указанными параметрами
//
// Параметры:
//  ИмяПользователя - Строка, имя пользователя
//  Компьютер - Строка, имя компьютера на котором работал пользователь
//  ИБ - СправочникСсылка.ИнформационнаяБаза, владелец контекста
//
// Возвращаемое значение:
//  СправочникСсылка.ПользовательИБ - созданный пользователь
//
Функция СоздатьПользователяИБ(ИмяПользователя, Компьютер, ИБ)
	
	ПользовательИБ = Справочники.ПользователиИБ.СоздатьЭлемент();
	ПользовательИБ.Владелец        = ИБ;
	ПользовательИБ.Наименование    = Компьютер + "\" + ИмяПользователя;
	ПользовательИБ.ИмяПользователя = ИмяПользователя;
	ПользовательИБ.Компьютер       = Компьютер;
	ПользовательИБ.Записать();
	
	Возврат ПользовательИБ.Ссылка;
	
КонецФункции // СоздатьПользователяИБ()


///////////////////////////////////////////////////////////////////////////////
// ИНФОРМАЦИОННАЯ БАЗА

// Возвращает тип СУБД для информационной базы
//
// Параметры:
//  ИБ - СправочникСсылка.ИнформационныеБазы - Информационная база
//
// Возвращаемое значение:
//   ПеречислениеСсылка.ТипыСУБД - Типы СУБД
//
Функция ПолучитьТипСУБД(ИБ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ИнформационныеБазы.ТипСУБД КАК ТипСУБД
	|ИЗ
	|	Справочник.ИнформационныеБазы КАК ИнформационныеБазы
	|ГДЕ
	|	ИнформационныеБазы.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ИБ);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.ТипСУБД;
	
КонецФункции // ПолучитьТипСУБД()

