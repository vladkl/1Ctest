///////////////////////////////////////////////////////////////////////////////
// СТРУКТУРА СЦЕНАРИЯ

// Найти строку состояния по наименованию состояния
//
// Параметры:
//  Состояние - Строка, искомое состояние
//  СтруктураСценария - ДеревоЗначений (см. СоздатьСтруктуруСценария())
//
// Возвращаемое значение:
//  СтрокаДереваЗначений - искомая строка состояния
//
Функция НайтиСтрокуСостояния(Состояние, СтруктураСценария) Экспорт
	
	Корень = СценарийКлиентСервер.КореньСценария(СтруктураСценария);
	
	РезультатПоиска = Неопределено;
	Для Каждого ТекСтр Из Корень.Строки Цикл
		Если ТекСтр.ТекущееСостояние = Состояние Тогда
			РезультатПоиска = ТекСтр;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат РезультатПоиска;
	
КонецФункции // НайтиСтрокуСостояния()

// Найти строку события по ссылке на событие
//
// Параметры:
//  Событие - СправочникСсылка.Событие, искомое событие
//  Параметры - Произвольный, параметры искомого события
//  Состояние - СтрокаДереваЗначений, родительское состояние
//
// Возвращаемое значение:
//  СтрокаДереваЗначений - искомая строка события
//
Функция НайтиСтрокуСобытия(Событие, Параметры, Состояние) Экспорт
	
	Если Состояние = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СтрокиСобытий = Состояние.Строки;
	
	Для Каждого СтрокаСобытия Из СтрокиСобытий Цикл
		Если СтрокаСобытия.Событие = Событие Тогда
			ПараметрыСобытийРавны = СобытияКлиентСервер.СравнитьПараметрыСобытия(
				Событие,
				?(СтрокаСобытия.ПараметрыСобытия = Неопределено, Неопределено, СобытияВызовСервера.РаспаковатьПараметрыСобытия(СтрокаСобытия.ПараметрыСобытия)),
				Параметры);
			
			Если ПараметрыСобытийРавны Тогда
				Возврат СтрокаСобытия;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции // НайтиСтрокуСобытия()



