///////////////////////////////////////////////////////////////////////////////
// СТРУКТУРА СЦЕНАРИЯ

// Создать дерево значений для структуры сценария
//
// Возвращаемое значение:
//  ДеревоЗначений - структура сценария в виде дерева
//
Функция СоздатьСтруктуруСценария() Экспорт
	
	СтруктураСценария = Новый Массив;
	
	Возврат СтруктураСценария;
	
КонецФункции // СоздатьСтруктуруСценария()

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучитьШаблонСтрокиСценария() Экспорт
	
	СтрокаСценария = Новый Структура;
	СтрокаСценария.Вставить("СтруктураСценария");
	СтрокаСценария.Вставить("ТекущееСостояние");
	СтрокаСценария.Вставить("Событие");
	СтрокаСценария.Вставить("ПараметрыСобытия");
	СтрокаСценария.Вставить("Команда");
	СтрокаСценария.Вставить("ПараметрыКоманды");
	СтрокаСценария.Вставить("СледующееСостояние");
	
	Возврат СтрокаСценария;
	
КонецФункции // ПолучитьШаблонСтрокиСценария()

// Загрузить указанный сценарий
//
// Параметры:
//  Сценарий - СправочникСсылка.Сценарий, загружаемый сценарий
//  СтруктураСценария - ДеревоЗначений (см. СоздатьСтруктуруСценария()), в эту
//                 переменную будет загружен сценарий
//
Процедура ЗагрузитьСценарий(СтруктураСценарияИсточник, СтруктураСценария) Экспорт
	
	Перем ПоследнееСостояние;
	Перем СтрокаТекущегоСостояния;
	Перем ПоследнееСобытие;
	Перем СтрокаПоследнегоСобытия;
	Перем ПараметрыПоследнегоСобытия;
	
	СтруктураСценария.Очистить(); //СтруктураСценария.Строки.Очистить();
	Корень = СценарийВызовСервера.ПолучитьШаблонСтруктурыСценария();
	СтруктураСценария.Добавить(Корень); //Корень = СтруктураСценария.Строки.Добавить();
	
	Корень.СтруктураСценария = "Структура сценария";
	
	Для Каждого СтрокаТаблицыСтруктуры Из СтруктураСценарияИсточник Цикл
		ТекущееСостояние = СтрокаТаблицыСтруктуры.ТекущееСостояние;
		СледующееСостояние = СтрокаТаблицыСтруктуры.СледующееСостояние;
		ЭтоНовоеСостояние = ТекущееСостояние <> ПоследнееСостояние;
		
		Если ЭтоНовоеСостояние Тогда
			СтрокаТекущегоСостояния = ДобавитьСостояние(СтруктураСценария, ТекущееСостояние);
			ПоследнееСостояние = ТекущееСостояние;
		КонецЕсли;
		
		ТекущееСобытие = СтрокаТаблицыСтруктуры.Событие;
		ПараметрыТекущегоСобытия = СтрокаТаблицыСтруктуры.ПараметрыСобытия;
		ПараметрыСобытийРавны = ТекущееСобытие = ПоследнееСобытие И СобытияКлиентСервер.СравнитьПараметрыСобытия(
			ТекущееСобытие,
			?(ПараметрыПоследнегоСобытия = Неопределено, Неопределено, СобытияВызовСервера.РаспаковатьПараметрыСобытия(ПараметрыПоследнегоСобытия)),
			СобытияВызовСервера.РаспаковатьПараметрыСобытия(ПараметрыТекущегоСобытия));
		
		Если ТекущееСобытие <> ПоследнееСобытие Или Не ПараметрыСобытийРавны Или ЭтоНовоеСостояние Тогда
			СтрокаПоследнегоСобытия = ДобавитьСобытие(СтрокаТекущегоСостояния, ТекущееСобытие, ПараметрыТекущегоСобытия);
			ПоследнееСобытие = ТекущееСобытие;
			ПараметрыПоследнегоСобытия = ПараметрыТекущегоСобытия;
		КонецЕсли;
		
		ДобавитьКоманду(СтрокаПоследнегоСобытия, СтрокаТаблицыСтруктуры.Команда, СтрокаТаблицыСтруктуры.ПараметрыКоманды, СледующееСостояние);
	КонецЦикла;
	
КонецПроцедуры // ЗагрузитьСценарий()

// Добавить новое состояние
//
// Параметры:
//  СтруктураСценария - ДеревоЗначений (см. СоздатьСтруктуруСценария()),
//                 куда добавлять
//  Состояние - Строка, наименование состояния
//
Функция ДобавитьСостояние(СтруктураСценария, Состояние) Экспорт
	
	НовоеСостояние = СценарийВызовСервера.ПолучитьШаблонСтруктурыСценария();
	НовоеСостояние.ТекущееСостояние = Состояние;
	НовоеСостояние.СтруктураСценария = Состояние;
	
	КореньСценария(СтруктураСценария).Строки.Добавить(НовоеСостояние);
	
	Возврат НовоеСостояние;
	
КонецФункции // ДобавитьСостояние()

// Получить корневой элемент сценария
//
// Возвращаемое значение:
//  СтрокаДереваЗначений – корневой элемент структуры сценария
//
Функция КореньСценария(СтруктураСценария) Экспорт
	
	Возврат СтруктураСценария[0];
	
КонецФункции // КореньСценария()

// Добавить новое событие
//
// Параметры:
//  Состояние - СтрокаДереваЗначений, куда добавлять
//  Событие - СправочникСсылка, добавляемое состояние
//  Параметры - ХранилищеЗначения, параметры события
//
Функция ДобавитьСобытие(Состояние, Событие, Параметры)
	
	НовоеСобытие = СценарийВызовСервера.ПолучитьШаблонСтруктурыСценария();
	НовоеСобытие.Событие = Событие;
	НовоеСобытие.СтруктураСценария = Событие;
	НовоеСобытие.ПараметрыСобытия = Параметры;
	
	Состояние.Строки.Добавить(НовоеСобытие);
	
	Возврат НовоеСобытие;
	
КонецФункции // ДобавитьСобытие()

// Добавить команду
//
// Параметры:
//  Событие - СтрокаДереваЗначений, куда добавлять
//  Команда - СправочникСсылка, добавляемое состояние
//  Параметры - ХранилищеЗначения, параметры события
//  СледующееСостояние - Строка, следующее состояние
//
Функция ДобавитьКоманду(Событие, Команда, Параметры, СледующееСостояние = Неопределено)
	
	НоваяКоманда = СценарийВызовСервера.ПолучитьШаблонСтруктурыСценария();
	НоваяКоманда.Команда = Команда;
	НоваяКоманда.СтруктураСценария = Команда;
	НоваяКоманда.ПараметрыКоманды = Параметры;
	НоваяКоманда.СледующееСостояние =
		?(СледующееСостояние = Неопределено,
			НоваяКоманда.Родитель.Родитель.ТекущееСостояние,
			СледующееСостояние);
	
	Событие.Строки.Добавить(НоваяКоманда);
	
	Возврат НоваяКоманда;
	
КонецФункции // ДобавитьКоманду()

