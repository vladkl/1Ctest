
///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Заполнить данные элементов формы
	Если Не ЗначениеЗаполнено(Объект.ТипБлокировки) Тогда
		Объект.ТипБлокировки = Перечисления.ТипыБлокировок.БлокировкаСУБД;
		Записать();
	КонецЕсли;
	
	Если Объект.ТипБлокировки = Перечисления.ТипыБлокировок.БлокировкаСУБД Тогда
		Преобразование = Новый ПреобразованиеXSL;
		Преобразование.ЗагрузитьТаблицуСтилейXSLИзСтроки(Документы.Взаимоблокировка.ПолучитьМакет("СтилиXML").ПолучитьТекст());
		ГрафВзаимоблокировки = Преобразование.ПреобразоватьИзСтроки(Объект.Граф);
	Иначе
		Элементы.СтраницаГрафВзаимоблокировки.Видимость = Ложь;
		Элементы.СтраницаПроцессы.Видимость = Ложь;
	КонецЕсли;
	
	ЗаполнитьТаблицуБлокировок();
	ЗаполнитьСписокПроцессов();
	ВыбратьСвойстваПроцесса(Процесс);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбщегоНазначенияКлиент.РазвернутьСтрокиДерева(Элементы.ТаблицаБлокировок, ТаблицаБлокировок.ПолучитьЭлементы(), Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
// Процедура обработки события ПриИзменении элемента Процессы.
// Выбирает свойства процесса.
//
Процедура ПроцессыПриИзменении(Элемент)
	
	ВыбратьСвойстваПроцесса(Процесс);
	
КонецПроцедуры // ПроцессыПриИзменении()

&НаКлиенте
Процедура ТаблицаБлокировокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ДанныеСтроки = ТаблицаБлокировок.НайтиПоИдентификатору(ВыбраннаяСтрока);
	Если ДанныеСтроки = Неопределено ИЛИ НЕ ЗначениеЗаполнено(ДанныеСтроки.СсылкаБлокировки) Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнениеЗапроса = ПолучитьРеквизитВыполнениеЗапроса(ДанныеСтроки.СсылкаБлокировки);
	Если ЗначениеЗаполнено(ВыполнениеЗапроса) Тогда
		ИнтерфейсыКлиент.ОткрытьВыполнениеЗапроса(ВыполнениеЗапроса);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьРеквизитВыполнениеЗапроса(ДокументБлокировка)
	
	Возврат ДокументБлокировка.ВыполнениеЗапроса
	
КонецФункции


///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
// Процедура заполняет таблицу свойств процесса.
// Выбирает данные из табличной части документа СвойствоПроцесса.
//
// Параметры:
//  НомерПроцесса - Число, номер процесса.
//
Процедура ВыбратьСвойстваПроцесса(НомерПроцесса)
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("НомерПроцесса", НомерПроцесса);
	НайденныеСтроки = Объект.СвойствоПроцесса.НайтиСтроки(ПараметрыОтбора);
	
	СвойстваПроцесса.Очистить();
	
	Для Каждого Строка Из НайденныеСтроки Цикл
		
		Свойство = СвойстваПроцесса.Добавить();
		
		Свойство.Свойство = Строка.Свойство;
		Свойство.Значение = Строка.Значение;
		
	КонецЦикла;
	
КонецПроцедуры // ВыбратьСвойстваПроцесса()

&НаСервере
// Процедура заполняет таблицу блокировок в виде дерева.
// Выполняет запрос, результат выгружает в дерево.
//
Процедура ЗаполнитьТаблицуБлокировок()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
		|ВЫБРАТЬ 
		|	Процесс КАК Процесс,
		|	Блокировка.Ссылка КАК СсылкаБлокировки,
		|	Блокировка.ВыполнениеЗапроса.Дата КАК Дата,
		|	Блокировка.ВыполнениеЗапроса.ПользовательИБ КАК Пользователь, 
		|	Блокировка.ВыполнениеЗапроса.КонтекстСсылка КАК Контекст,
		|	ВЫБОР
		|		КОГДА Блокировки.Блокировка.Ресурс.Тип = &ОбъектМетаданных
		|			ТОГДА Блокировки.Блокировка.Ресурс
		|		КОГДА Блокировки.Блокировка.Ресурс.Тип = &Таблица
		|			ТОГДА Блокировки.Блокировка.Ресурс.Родитель
		|		ИНАЧЕ Блокировки.Блокировка.Ресурс.Родитель.Родитель
		|	КОНЕЦ КАК РесурсОбъектМетаданных,
		|	ВЫБОР
		|		КОГДА Блокировки.Блокировка.Ресурс.Тип = &Таблица
		|			ТОГДА Блокировки.Блокировка.Ресурс
		|		ИНАЧЕ Блокировки.Блокировка.Ресурс.Родитель
		|	КОНЕЦ КАК РесурсТаблица,
		|	ВЫБОР
		|		КОГДА Блокировки.Блокировка.Ресурс.Тип = &Индекс
		|			ТОГДА Блокировки.Блокировка.Ресурс
		|	КОНЕЦ КАК РесурсИндекс,
		|	Блокировка.Режим КАК Режим,
		|	Блокировка.Состояние КАК Состояние
		|ИЗ 
		|	Документ.Взаимоблокировка.Блокировки КАК Блокировки ГДЕ ССылка = &Ссылка
		|УПОРЯДОЧИТЬ ПО Процесс, Блокировка.ВыполнениеЗапроса.МоментВремениОкончания
		|ИТОГИ ПО Процесс
		|";
	
	Запрос.УстановитьПараметр("ОбъектМетаданных", Перечисления.ТипыРесурсов.ОбъектМетаданных);
	Запрос.УстановитьПараметр("Таблица",          Перечисления.ТипыРесурсов.Таблица);
	Запрос.УстановитьПараметр("Индекс",           Перечисления.ТипыРесурсов.Индекс);
	Запрос.УстановитьПараметр("Ссылка",           Объект.Ссылка);
	
	ДеревоБлокировок = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	ДеревоБлокировок.Колонки.Добавить("ИндексКартинки", Новый ОписаниеТипов("Число"));
	ДеревоБлокировок.Колонки.Добавить("ИндексКартинкиОбъектМетаданных", Новый ОписаниеТипов("Число"));
	НастроитьСтрокиДерева(ДеревоБлокировок, 0);
	
	ЗначениеВРеквизитФормы(ДеревоБлокировок, "ТаблицаБлокировок");
	
КонецПроцедуры // ЗаполнитьТаблицуБлокировок()

&НаСервереБезКонтекста
Процедура НастроитьСтрокиДерева(Дерево, Уровень)
	
	Для Каждого Строка Из Дерево.Строки Цикл
		Если Уровень = 0 Тогда
			Строка.ИндексКартинки = 0;
		ИначеЕсли Строка.Состояние = Перечисления.СостоянияБлокировок.Установлена Тогда
			Строка.ИндексКартинки = 1;
		Иначе
			Строка.ИндексКартинки = 2;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.РесурсОбъектМетаданных) Тогда
			Строка.ИндексКартинкиОбъектМетаданных = СтруктураМетаданных.ПолучитьИндексКартинки(Строка.РесурсОбъектМетаданных);
		Иначе
			Строка.ИндексКартинкиОбъектМетаданных = -1;
		КонецЕсли;
		
		Если Строка.Строки.Количество() > 0 Тогда
			НастроитьСтрокиДерева(Строка, Уровень+1);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
// Процедура заполняет список процессов.
// Выполняет запрос, результат выгружает в список выбора процессы.
//
Процедура ЗаполнитьСписокПроцессов()
	
	Элементы.Процесс.СписокВыбора.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ 
	               |	Процесс ИЗ Документ.Взаимоблокировка.Блокировки
	               |ГДЕ
	               |	Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Элементы.Процесс.СписокВыбора.Добавить(Выборка.Процесс, Выборка.Процесс);
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьСписокПроцессов()

