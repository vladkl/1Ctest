
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьДокумент();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура БлокировкаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Блокировка.НайтиПоИдентификатору(ВыбраннаяСтрока);
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИнтерфейсыКлиент.ОткрытьВыполнениеЗапроса(ТекущиеДанные.ВыполнениеЗапроса);
	
КонецПроцедуры

&НаСервере
// Процедура заполняет таблицу блокировок.
// Выполняет запрос, результат выгружает в таблицузначений.
//
Процедура ЗаполнитьДокумент()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОжиданиеНаБлокировке.Процесс КАК Процесс,
	               |	ОжиданиеНаБлокировке.МоментВыполнения КАК МоментВыполнения,
	               |	ОжиданиеНаБлокировке.Длительность КАК Длительность,
	               |	ОжиданиеНаБлокировке.ПользовательИБ КАК Пользователь,
	               |	ОжиданиеНаБлокировке.Ресурс КАК Ресурс,
	               |	ОжиданиеНаБлокировке.Состояние КАК Состояние,
	               |	ОжиданиеНаБлокировке.Блокировка КАК Блокировка,
	               |	ОжиданиеНаБлокировке.ВыполнениеЗапроса КАК ВыполнениеЗапроса,
	               |	ВЫБОР
	               |		КОГДА ОжиданиеНаБлокировке.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияБлокировок.Установлена)
	               |			ТОГДА 1
	               |		ИНАЧЕ 2
	               |	КОНЕЦ КАК ИндексКартинки
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		1 КАК Процесс,
	               |		ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса.Дата КАК МоментВыполнения,
	               |		ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса.ВремяВыполненияМс КАК Длительность,
	               |		ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса.ПользовательИБ КАК ПользовательИБ,
	               |		ОжиданиеНаБлокировке.Блокирует КАК Блокировка,
	               |		ОжиданиеНаБлокировке.Блокирует.ВыполнениеЗапроса КАК ВыполнениеЗапроса,
	               |		ОжиданиеНаБлокировке.Блокирует.Ресурс КАК Ресурс,
	               |		ОжиданиеНаБлокировке.Блокирует.Состояние КАК Состояние
	               |	ИЗ
	               |		Документ.ОжиданиеНаБлокировке КАК ОжиданиеНаБлокировке
	               |	ГДЕ
	               |		ОжиданиеНаБлокировке.Ссылка = &ссылка
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		2,
	               |		ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса.Дата,
	               |		ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса.ВремяВыполненияМс,
	               |		ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса.ПользовательИБ,
	               |		ОжиданиеНаБлокировке.Заблокирована,
	               |		ОжиданиеНаБлокировке.Заблокирована.ВыполнениеЗапроса,
	               |		ОжиданиеНаБлокировке.Заблокирована.Ресурс,
	               |		ОжиданиеНаБлокировке.Заблокирована.Состояние
	               |	ИЗ
	               |		Документ.ОжиданиеНаБлокировке КАК ОжиданиеНаБлокировке
	               |	ГДЕ
	               |		ОжиданиеНаБлокировке.Ссылка = &Ссылка) КАК ОжиданиеНаБлокировке";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	ТаблицаБлокировок = Запрос.Выполнить().Выгрузить();
	ЗначениеВРеквизитФормы(ТаблицаБлокировок, "Блокировка");
	
КонецПроцедуры // ЗаполнитьДокумент()


